module.exports=(()=>{var __webpack_modules__={932:(e,t,s)=>{const r=s(747).promises;const n=s(622);const{getInput:o,info:i,setFailed:a,warning:c}=s(186);const u=s(438);const l=s(750);const p=e=>{const t=e.toLowerCase();switch(t){case"organization":return"org";case"username":return"login";case"user id":return"invitee_id";case"invitation creation date":return"date";default:return t}};const f=(e,t)=>{if(e===""){return undefined}switch(t.column){case"invitee_id":return parseInt(e,10);case"date":return new Date(e);default:return e}};(async()=>{try{const e=o("report-path",{required:true});const t=n.join(process.env.GITHUB_WORKSPACE,e);const{dir:s}=n.parse(t);if(s.indexOf(process.env.GITHUB_WORKSPACE)<0){throw new Error(`${e} is not an allowed path`)}const d=o("token",{required:true});const h=new u.getOctokit(d);const m=await r.readFile(e);const g=l(m,{columns:e=>e.map(p),cast:f,trim:true});if(g.length<=0){i(`no invitations found`);process.exit(0)}for(const{org:e,login:t,email:s}of g){const r={org:e};if(t===undefined){r.email=s}else{const{data:{id:e}}=await h.request("GET /users/{username}",{username:t});r.invitee_id=e}const{status:n,data:o}=await h.request("POST /orgs/{org}/invitations",r);if(n!==201){c(`organization(${e}) invitation failed for ${o.login?o.login:o.email}`)}else{i(`organization(${e}) invitation sent to ${o.login?o.login:o.email}`)}}}catch(e){a(e.message)}})()},351:function(e,t,s){"use strict";var r=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(e!=null)for(var s in e)if(Object.hasOwnProperty.call(e,s))t[s]=e[s];t["default"]=e;return t};Object.defineProperty(t,"__esModule",{value:true});const n=r(s(87));const o=s(278);function issueCommand(e,t,s){const r=new Command(e,t,s);process.stdout.write(r.toString()+n.EOL)}t.issueCommand=issueCommand;function issue(e,t=""){issueCommand(e,{},t)}t.issue=issue;const i="::";class Command{constructor(e,t,s){if(!e){e="missing.command"}this.command=e;this.properties=t;this.message=s}toString(){let e=i+this.command;if(this.properties&&Object.keys(this.properties).length>0){e+=" ";let t=true;for(const s in this.properties){if(this.properties.hasOwnProperty(s)){const r=this.properties[s];if(r){if(t){t=false}else{e+=","}e+=`${s}=${escapeProperty(r)}`}}}}e+=`${i}${escapeData(this.message)}`;return e}}function escapeData(e){return o.toCommandValue(e).replace(/%/g,"%25").replace(/\r/g,"%0D").replace(/\n/g,"%0A")}function escapeProperty(e){return o.toCommandValue(e).replace(/%/g,"%25").replace(/\r/g,"%0D").replace(/\n/g,"%0A").replace(/:/g,"%3A").replace(/,/g,"%2C")}},186:function(e,t,s){"use strict";var r=this&&this.__awaiter||function(e,t,s,r){function adopt(e){return e instanceof s?e:new s(function(t){t(e)})}return new(s||(s=Promise))(function(s,n){function fulfilled(e){try{step(r.next(e))}catch(e){n(e)}}function rejected(e){try{step(r["throw"](e))}catch(e){n(e)}}function step(e){e.done?s(e.value):adopt(e.value).then(fulfilled,rejected)}step((r=r.apply(e,t||[])).next())})};var n=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(e!=null)for(var s in e)if(Object.hasOwnProperty.call(e,s))t[s]=e[s];t["default"]=e;return t};Object.defineProperty(t,"__esModule",{value:true});const o=s(351);const i=s(717);const a=s(278);const c=n(s(87));const u=n(s(622));var l;(function(e){e[e["Success"]=0]="Success";e[e["Failure"]=1]="Failure"})(l=t.ExitCode||(t.ExitCode={}));function exportVariable(e,t){const s=a.toCommandValue(t);process.env[e]=s;const r=process.env["GITHUB_ENV"]||"";if(r){const t="_GitHubActionsFileCommandDelimeter_";const r=`${e}<<${t}${c.EOL}${s}${c.EOL}${t}`;i.issueCommand("ENV",r)}else{o.issueCommand("set-env",{name:e},s)}}t.exportVariable=exportVariable;function setSecret(e){o.issueCommand("add-mask",{},e)}t.setSecret=setSecret;function addPath(e){const t=process.env["GITHUB_PATH"]||"";if(t){i.issueCommand("PATH",e)}else{o.issueCommand("add-path",{},e)}process.env["PATH"]=`${e}${u.delimiter}${process.env["PATH"]}`}t.addPath=addPath;function getInput(e,t){const s=process.env[`INPUT_${e.replace(/ /g,"_").toUpperCase()}`]||"";if(t&&t.required&&!s){throw new Error(`Input required and not supplied: ${e}`)}return s.trim()}t.getInput=getInput;function setOutput(e,t){o.issueCommand("set-output",{name:e},t)}t.setOutput=setOutput;function setCommandEcho(e){o.issue("echo",e?"on":"off")}t.setCommandEcho=setCommandEcho;function setFailed(e){process.exitCode=l.Failure;error(e)}t.setFailed=setFailed;function isDebug(){return process.env["RUNNER_DEBUG"]==="1"}t.isDebug=isDebug;function debug(e){o.issueCommand("debug",{},e)}t.debug=debug;function error(e){o.issue("error",e instanceof Error?e.toString():e)}t.error=error;function warning(e){o.issue("warning",e instanceof Error?e.toString():e)}t.warning=warning;function info(e){process.stdout.write(e+c.EOL)}t.info=info;function startGroup(e){o.issue("group",e)}t.startGroup=startGroup;function endGroup(){o.issue("endgroup")}t.endGroup=endGroup;function group(e,t){return r(this,void 0,void 0,function*(){startGroup(e);let s;try{s=yield t()}finally{endGroup()}return s})}t.group=group;function saveState(e,t){o.issueCommand("save-state",{name:e},t)}t.saveState=saveState;function getState(e){return process.env[`STATE_${e}`]||""}t.getState=getState},717:function(e,t,s){"use strict";var r=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(e!=null)for(var s in e)if(Object.hasOwnProperty.call(e,s))t[s]=e[s];t["default"]=e;return t};Object.defineProperty(t,"__esModule",{value:true});const n=r(s(747));const o=r(s(87));const i=s(278);function issueCommand(e,t){const s=process.env[`GITHUB_${e}`];if(!s){throw new Error(`Unable to find environment variable for file command ${e}`)}if(!n.existsSync(s)){throw new Error(`Missing file at path: ${s}`)}n.appendFileSync(s,`${i.toCommandValue(t)}${o.EOL}`,{encoding:"utf8"})}t.issueCommand=issueCommand},278:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});function toCommandValue(e){if(e===null||e===undefined){return""}else if(typeof e==="string"||e instanceof String){return e}return JSON.stringify(e)}t.toCommandValue=toCommandValue},53:(e,t,s)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.Context=void 0;const r=s(747);const n=s(87);class Context{constructor(){this.payload={};if(process.env.GITHUB_EVENT_PATH){if(r.existsSync(process.env.GITHUB_EVENT_PATH)){this.payload=JSON.parse(r.readFileSync(process.env.GITHUB_EVENT_PATH,{encoding:"utf8"}))}else{const e=process.env.GITHUB_EVENT_PATH;process.stdout.write(`GITHUB_EVENT_PATH ${e} does not exist${n.EOL}`)}}this.eventName=process.env.GITHUB_EVENT_NAME;this.sha=process.env.GITHUB_SHA;this.ref=process.env.GITHUB_REF;this.workflow=process.env.GITHUB_WORKFLOW;this.action=process.env.GITHUB_ACTION;this.actor=process.env.GITHUB_ACTOR;this.job=process.env.GITHUB_JOB;this.runNumber=parseInt(process.env.GITHUB_RUN_NUMBER,10);this.runId=parseInt(process.env.GITHUB_RUN_ID,10)}get issue(){const e=this.payload;return Object.assign(Object.assign({},this.repo),{number:(e.issue||e.pull_request||e).number})}get repo(){if(process.env.GITHUB_REPOSITORY){const[e,t]=process.env.GITHUB_REPOSITORY.split("/");return{owner:e,repo:t}}if(this.payload.repository){return{owner:this.payload.repository.owner.login,repo:this.payload.repository.name}}throw new Error("context.repo requires a GITHUB_REPOSITORY environment variable like 'owner/repo'")}}t.Context=Context},438:function(e,t,s){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,s,r){if(r===undefined)r=s;Object.defineProperty(e,r,{enumerable:true,get:function(){return t[s]}})}:function(e,t,s,r){if(r===undefined)r=s;e[r]=t[s]});var n=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:true,value:t})}:function(e,t){e["default"]=t});var o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(e!=null)for(var s in e)if(Object.hasOwnProperty.call(e,s))r(t,e,s);n(t,e);return t};Object.defineProperty(t,"__esModule",{value:true});t.getOctokit=t.context=void 0;const i=o(s(53));const a=s(30);t.context=new i.Context;function getOctokit(e,t){return new a.GitHub(a.getOctokitOptions(e,t))}t.getOctokit=getOctokit},914:function(e,t,s){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,s,r){if(r===undefined)r=s;Object.defineProperty(e,r,{enumerable:true,get:function(){return t[s]}})}:function(e,t,s,r){if(r===undefined)r=s;e[r]=t[s]});var n=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:true,value:t})}:function(e,t){e["default"]=t});var o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(e!=null)for(var s in e)if(Object.hasOwnProperty.call(e,s))r(t,e,s);n(t,e);return t};Object.defineProperty(t,"__esModule",{value:true});t.getApiBaseUrl=t.getProxyAgent=t.getAuthString=void 0;const i=o(s(925));function getAuthString(e,t){if(!e&&!t.auth){throw new Error("Parameter token or opts.auth is required")}else if(e&&t.auth){throw new Error("Parameters token and opts.auth may not both be specified")}return typeof t.auth==="string"?t.auth:`token ${e}`}t.getAuthString=getAuthString;function getProxyAgent(e){const t=new i.HttpClient;return t.getAgent(e)}t.getProxyAgent=getProxyAgent;function getApiBaseUrl(){return process.env["GITHUB_API_URL"]||"https://api.github.com"}t.getApiBaseUrl=getApiBaseUrl},30:function(e,t,s){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,s,r){if(r===undefined)r=s;Object.defineProperty(e,r,{enumerable:true,get:function(){return t[s]}})}:function(e,t,s,r){if(r===undefined)r=s;e[r]=t[s]});var n=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:true,value:t})}:function(e,t){e["default"]=t});var o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(e!=null)for(var s in e)if(Object.hasOwnProperty.call(e,s))r(t,e,s);n(t,e);return t};Object.defineProperty(t,"__esModule",{value:true});t.getOctokitOptions=t.GitHub=t.context=void 0;const i=o(s(53));const a=o(s(914));const c=s(762);const u=s(44);const l=s(193);t.context=new i.Context;const p=a.getApiBaseUrl();const f={baseUrl:p,request:{agent:a.getProxyAgent(p)}};t.GitHub=c.Octokit.plugin(u.restEndpointMethods,l.paginateRest).defaults(f);function getOctokitOptions(e,t){const s=Object.assign({},t||{});const r=a.getAuthString(e,s);if(r){s.auth=r}return s}t.getOctokitOptions=getOctokitOptions},925:(e,t,s)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});const r=s(605);const n=s(211);const o=s(443);let i;var a;(function(e){e[e["OK"]=200]="OK";e[e["MultipleChoices"]=300]="MultipleChoices";e[e["MovedPermanently"]=301]="MovedPermanently";e[e["ResourceMoved"]=302]="ResourceMoved";e[e["SeeOther"]=303]="SeeOther";e[e["NotModified"]=304]="NotModified";e[e["UseProxy"]=305]="UseProxy";e[e["SwitchProxy"]=306]="SwitchProxy";e[e["TemporaryRedirect"]=307]="TemporaryRedirect";e[e["PermanentRedirect"]=308]="PermanentRedirect";e[e["BadRequest"]=400]="BadRequest";e[e["Unauthorized"]=401]="Unauthorized";e[e["PaymentRequired"]=402]="PaymentRequired";e[e["Forbidden"]=403]="Forbidden";e[e["NotFound"]=404]="NotFound";e[e["MethodNotAllowed"]=405]="MethodNotAllowed";e[e["NotAcceptable"]=406]="NotAcceptable";e[e["ProxyAuthenticationRequired"]=407]="ProxyAuthenticationRequired";e[e["RequestTimeout"]=408]="RequestTimeout";e[e["Conflict"]=409]="Conflict";e[e["Gone"]=410]="Gone";e[e["TooManyRequests"]=429]="TooManyRequests";e[e["InternalServerError"]=500]="InternalServerError";e[e["NotImplemented"]=501]="NotImplemented";e[e["BadGateway"]=502]="BadGateway";e[e["ServiceUnavailable"]=503]="ServiceUnavailable";e[e["GatewayTimeout"]=504]="GatewayTimeout"})(a=t.HttpCodes||(t.HttpCodes={}));var c;(function(e){e["Accept"]="accept";e["ContentType"]="content-type"})(c=t.Headers||(t.Headers={}));var u;(function(e){e["ApplicationJson"]="application/json"})(u=t.MediaTypes||(t.MediaTypes={}));function getProxyUrl(e){let t=o.getProxyUrl(new URL(e));return t?t.href:""}t.getProxyUrl=getProxyUrl;const l=[a.MovedPermanently,a.ResourceMoved,a.SeeOther,a.TemporaryRedirect,a.PermanentRedirect];const p=[a.BadGateway,a.ServiceUnavailable,a.GatewayTimeout];const f=["OPTIONS","GET","DELETE","HEAD"];const d=10;const h=5;class HttpClientError extends Error{constructor(e,t){super(e);this.name="HttpClientError";this.statusCode=t;Object.setPrototypeOf(this,HttpClientError.prototype)}}t.HttpClientError=HttpClientError;class HttpClientResponse{constructor(e){this.message=e}readBody(){return new Promise(async(e,t)=>{let s=Buffer.alloc(0);this.message.on("data",e=>{s=Buffer.concat([s,e])});this.message.on("end",()=>{e(s.toString())})})}}t.HttpClientResponse=HttpClientResponse;function isHttps(e){let t=new URL(e);return t.protocol==="https:"}t.isHttps=isHttps;class HttpClient{constructor(e,t,s){this._ignoreSslError=false;this._allowRedirects=true;this._allowRedirectDowngrade=false;this._maxRedirects=50;this._allowRetries=false;this._maxRetries=1;this._keepAlive=false;this._disposed=false;this.userAgent=e;this.handlers=t||[];this.requestOptions=s;if(s){if(s.ignoreSslError!=null){this._ignoreSslError=s.ignoreSslError}this._socketTimeout=s.socketTimeout;if(s.allowRedirects!=null){this._allowRedirects=s.allowRedirects}if(s.allowRedirectDowngrade!=null){this._allowRedirectDowngrade=s.allowRedirectDowngrade}if(s.maxRedirects!=null){this._maxRedirects=Math.max(s.maxRedirects,0)}if(s.keepAlive!=null){this._keepAlive=s.keepAlive}if(s.allowRetries!=null){this._allowRetries=s.allowRetries}if(s.maxRetries!=null){this._maxRetries=s.maxRetries}}}options(e,t){return this.request("OPTIONS",e,null,t||{})}get(e,t){return this.request("GET",e,null,t||{})}del(e,t){return this.request("DELETE",e,null,t||{})}post(e,t,s){return this.request("POST",e,t,s||{})}patch(e,t,s){return this.request("PATCH",e,t,s||{})}put(e,t,s){return this.request("PUT",e,t,s||{})}head(e,t){return this.request("HEAD",e,null,t||{})}sendStream(e,t,s,r){return this.request(e,t,s,r)}async getJson(e,t={}){t[c.Accept]=this._getExistingOrDefaultHeader(t,c.Accept,u.ApplicationJson);let s=await this.get(e,t);return this._processResponse(s,this.requestOptions)}async postJson(e,t,s={}){let r=JSON.stringify(t,null,2);s[c.Accept]=this._getExistingOrDefaultHeader(s,c.Accept,u.ApplicationJson);s[c.ContentType]=this._getExistingOrDefaultHeader(s,c.ContentType,u.ApplicationJson);let n=await this.post(e,r,s);return this._processResponse(n,this.requestOptions)}async putJson(e,t,s={}){let r=JSON.stringify(t,null,2);s[c.Accept]=this._getExistingOrDefaultHeader(s,c.Accept,u.ApplicationJson);s[c.ContentType]=this._getExistingOrDefaultHeader(s,c.ContentType,u.ApplicationJson);let n=await this.put(e,r,s);return this._processResponse(n,this.requestOptions)}async patchJson(e,t,s={}){let r=JSON.stringify(t,null,2);s[c.Accept]=this._getExistingOrDefaultHeader(s,c.Accept,u.ApplicationJson);s[c.ContentType]=this._getExistingOrDefaultHeader(s,c.ContentType,u.ApplicationJson);let n=await this.patch(e,r,s);return this._processResponse(n,this.requestOptions)}async request(e,t,s,r){if(this._disposed){throw new Error("Client has already been disposed.")}let n=new URL(t);let o=this._prepareRequest(e,n,r);let i=this._allowRetries&&f.indexOf(e)!=-1?this._maxRetries+1:1;let c=0;let u;while(c<i){u=await this.requestRaw(o,s);if(u&&u.message&&u.message.statusCode===a.Unauthorized){let e;for(let t=0;t<this.handlers.length;t++){if(this.handlers[t].canHandleAuthentication(u)){e=this.handlers[t];break}}if(e){return e.handleAuthentication(this,o,s)}else{return u}}let t=this._maxRedirects;while(l.indexOf(u.message.statusCode)!=-1&&this._allowRedirects&&t>0){const i=u.message.headers["location"];if(!i){break}let a=new URL(i);if(n.protocol=="https:"&&n.protocol!=a.protocol&&!this._allowRedirectDowngrade){throw new Error("Redirect from HTTPS to HTTP protocol. This downgrade is not allowed for security reasons. If you want to allow this behavior, set the allowRedirectDowngrade option to true.")}await u.readBody();if(a.hostname!==n.hostname){for(let e in r){if(e.toLowerCase()==="authorization"){delete r[e]}}}o=this._prepareRequest(e,a,r);u=await this.requestRaw(o,s);t--}if(p.indexOf(u.message.statusCode)==-1){return u}c+=1;if(c<i){await u.readBody();await this._performExponentialBackoff(c)}}return u}dispose(){if(this._agent){this._agent.destroy()}this._disposed=true}requestRaw(e,t){return new Promise((s,r)=>{let n=function(e,t){if(e){r(e)}s(t)};this.requestRawWithCallback(e,t,n)})}requestRawWithCallback(e,t,s){let r;if(typeof t==="string"){e.options.headers["Content-Length"]=Buffer.byteLength(t,"utf8")}let n=false;let o=(e,t)=>{if(!n){n=true;s(e,t)}};let i=e.httpModule.request(e.options,e=>{let t=new HttpClientResponse(e);o(null,t)});i.on("socket",e=>{r=e});i.setTimeout(this._socketTimeout||3*6e4,()=>{if(r){r.end()}o(new Error("Request timeout: "+e.options.path),null)});i.on("error",function(e){o(e,null)});if(t&&typeof t==="string"){i.write(t,"utf8")}if(t&&typeof t!=="string"){t.on("close",function(){i.end()});t.pipe(i)}else{i.end()}}getAgent(e){let t=new URL(e);return this._getAgent(t)}_prepareRequest(e,t,s){const o={};o.parsedUrl=t;const i=o.parsedUrl.protocol==="https:";o.httpModule=i?n:r;const a=i?443:80;o.options={};o.options.host=o.parsedUrl.hostname;o.options.port=o.parsedUrl.port?parseInt(o.parsedUrl.port):a;o.options.path=(o.parsedUrl.pathname||"")+(o.parsedUrl.search||"");o.options.method=e;o.options.headers=this._mergeHeaders(s);if(this.userAgent!=null){o.options.headers["user-agent"]=this.userAgent}o.options.agent=this._getAgent(o.parsedUrl);if(this.handlers){this.handlers.forEach(e=>{e.prepareRequest(o.options)})}return o}_mergeHeaders(e){const t=e=>Object.keys(e).reduce((t,s)=>(t[s.toLowerCase()]=e[s],t),{});if(this.requestOptions&&this.requestOptions.headers){return Object.assign({},t(this.requestOptions.headers),t(e))}return t(e||{})}_getExistingOrDefaultHeader(e,t,s){const r=e=>Object.keys(e).reduce((t,s)=>(t[s.toLowerCase()]=e[s],t),{});let n;if(this.requestOptions&&this.requestOptions.headers){n=r(this.requestOptions.headers)[t]}return e[t]||n||s}_getAgent(e){let t;let a=o.getProxyUrl(e);let c=a&&a.hostname;if(this._keepAlive&&c){t=this._proxyAgent}if(this._keepAlive&&!c){t=this._agent}if(!!t){return t}const u=e.protocol==="https:";let l=100;if(!!this.requestOptions){l=this.requestOptions.maxSockets||r.globalAgent.maxSockets}if(c){if(!i){i=s(294)}const e={maxSockets:l,keepAlive:this._keepAlive,proxy:{proxyAuth:`${a.username}:${a.password}`,host:a.hostname,port:a.port}};let r;const n=a.protocol==="https:";if(u){r=n?i.httpsOverHttps:i.httpsOverHttp}else{r=n?i.httpOverHttps:i.httpOverHttp}t=r(e);this._proxyAgent=t}if(this._keepAlive&&!t){const e={keepAlive:this._keepAlive,maxSockets:l};t=u?new n.Agent(e):new r.Agent(e);this._agent=t}if(!t){t=u?n.globalAgent:r.globalAgent}if(u&&this._ignoreSslError){t.options=Object.assign(t.options||{},{rejectUnauthorized:false})}return t}_performExponentialBackoff(e){e=Math.min(d,e);const t=h*Math.pow(2,e);return new Promise(e=>setTimeout(()=>e(),t))}static dateTimeDeserializer(e,t){if(typeof t==="string"){let e=new Date(t);if(!isNaN(e.valueOf())){return e}}return t}async _processResponse(e,t){return new Promise(async(s,r)=>{const n=e.message.statusCode;const o={statusCode:n,result:null,headers:{}};if(n==a.NotFound){s(o)}let i;let c;try{c=await e.readBody();if(c&&c.length>0){if(t&&t.deserializeDates){i=JSON.parse(c,HttpClient.dateTimeDeserializer)}else{i=JSON.parse(c)}o.result=i}o.headers=e.message.headers}catch(e){}if(n>299){let e;if(i&&i.message){e=i.message}else if(c&&c.length>0){e=c}else{e="Failed request: ("+n+")"}let t=new HttpClientError(e,n);t.result=o.result;r(t)}else{s(o)}})}}t.HttpClient=HttpClient},443:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});function getProxyUrl(e){let t=e.protocol==="https:";let s;if(checkBypass(e)){return s}let r;if(t){r=process.env["https_proxy"]||process.env["HTTPS_PROXY"]}else{r=process.env["http_proxy"]||process.env["HTTP_PROXY"]}if(r){s=new URL(r)}return s}t.getProxyUrl=getProxyUrl;function checkBypass(e){if(!e.hostname){return false}let t=process.env["no_proxy"]||process.env["NO_PROXY"]||"";if(!t){return false}let s;if(e.port){s=Number(e.port)}else if(e.protocol==="http:"){s=80}else if(e.protocol==="https:"){s=443}let r=[e.hostname.toUpperCase()];if(typeof s==="number"){r.push(`${r[0]}:${s}`)}for(let e of t.split(",").map(e=>e.trim().toUpperCase()).filter(e=>e)){if(r.some(t=>t===e)){return true}}return false}t.checkBypass=checkBypass},334:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});async function auth(e){const t=e.split(/\./).length===3?"app":/^v\d+\./.test(e)?"installation":"oauth";return{type:"token",token:e,tokenType:t}}function withAuthorizationPrefix(e){if(e.split(/\./).length===3){return`bearer ${e}`}return`token ${e}`}async function hook(e,t,s,r){const n=t.endpoint.merge(s,r);n.headers.authorization=withAuthorizationPrefix(e);return t(n)}const s=function createTokenAuth(e){if(!e){throw new Error("[@octokit/auth-token] No token passed to createTokenAuth")}if(typeof e!=="string"){throw new Error("[@octokit/auth-token] Token passed to createTokenAuth is not a string")}e=e.replace(/^(token|bearer) +/i,"");return Object.assign(auth.bind(null,e),{hook:hook.bind(null,e)})};t.createTokenAuth=s},762:(e,t,s)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});var r=s(429);var n=s(682);var o=s(234);var i=s(668);var a=s(334);function _objectWithoutPropertiesLoose(e,t){if(e==null)return{};var s={};var r=Object.keys(e);var n,o;for(o=0;o<r.length;o++){n=r[o];if(t.indexOf(n)>=0)continue;s[n]=e[n]}return s}function _objectWithoutProperties(e,t){if(e==null)return{};var s=_objectWithoutPropertiesLoose(e,t);var r,n;if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++){r=o[n];if(t.indexOf(r)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(e,r))continue;s[r]=e[r]}}return s}const c="3.2.1";class Octokit{constructor(e={}){const t=new n.Collection;const s={baseUrl:o.request.endpoint.DEFAULTS.baseUrl,headers:{},request:Object.assign({},e.request,{hook:t.bind(null,"request")}),mediaType:{previews:[],format:""}};s.headers["user-agent"]=[e.userAgent,`octokit-core.js/${c} ${r.getUserAgent()}`].filter(Boolean).join(" ");if(e.baseUrl){s.baseUrl=e.baseUrl}if(e.previews){s.mediaType.previews=e.previews}if(e.timeZone){s.headers["time-zone"]=e.timeZone}this.request=o.request.defaults(s);this.graphql=i.withCustomRequest(this.request).defaults(s);this.log=Object.assign({debug:()=>{},info:()=>{},warn:console.warn.bind(console),error:console.error.bind(console)},e.log);this.hook=t;if(!e.authStrategy){if(!e.auth){this.auth=(async()=>({type:"unauthenticated"}))}else{const s=a.createTokenAuth(e.auth);t.wrap("request",s.hook);this.auth=s}}else{const{authStrategy:s}=e,r=_objectWithoutProperties(e,["authStrategy"]);const n=s(Object.assign({request:this.request,log:this.log,octokit:this,octokitOptions:r},e.auth));t.wrap("request",n.hook);this.auth=n}const u=this.constructor;u.plugins.forEach(t=>{Object.assign(this,t(this,e))})}static defaults(e){const t=class extends(this){constructor(...t){const s=t[0]||{};if(typeof e==="function"){super(e(s));return}super(Object.assign({},e,s,s.userAgent&&e.userAgent?{userAgent:`${s.userAgent} ${e.userAgent}`}:null))}};return t}static plugin(...e){var t;const s=this.plugins;const r=(t=class extends(this){},t.plugins=s.concat(e.filter(e=>!s.includes(e))),t);return r}}Octokit.VERSION=c;Octokit.plugins=[];t.Octokit=Octokit},440:(e,t,s)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});var r=s(287);var n=s(429);function lowercaseKeys(e){if(!e){return{}}return Object.keys(e).reduce((t,s)=>{t[s.toLowerCase()]=e[s];return t},{})}function mergeDeep(e,t){const s=Object.assign({},e);Object.keys(t).forEach(n=>{if(r.isPlainObject(t[n])){if(!(n in e))Object.assign(s,{[n]:t[n]});else s[n]=mergeDeep(e[n],t[n])}else{Object.assign(s,{[n]:t[n]})}});return s}function removeUndefinedProperties(e){for(const t in e){if(e[t]===undefined){delete e[t]}}return e}function merge(e,t,s){if(typeof t==="string"){let[e,r]=t.split(" ");s=Object.assign(r?{method:e,url:r}:{url:e},s)}else{s=Object.assign({},t)}s.headers=lowercaseKeys(s.headers);removeUndefinedProperties(s);removeUndefinedProperties(s.headers);const r=mergeDeep(e||{},s);if(e&&e.mediaType.previews.length){r.mediaType.previews=e.mediaType.previews.filter(e=>!r.mediaType.previews.includes(e)).concat(r.mediaType.previews)}r.mediaType.previews=r.mediaType.previews.map(e=>e.replace(/-preview/,""));return r}function addQueryParameters(e,t){const s=/\?/.test(e)?"&":"?";const r=Object.keys(t);if(r.length===0){return e}return e+s+r.map(e=>{if(e==="q"){return"q="+t.q.split("+").map(encodeURIComponent).join("+")}return`${e}=${encodeURIComponent(t[e])}`}).join("&")}const o=/\{[^}]+\}/g;function removeNonChars(e){return e.replace(/^\W+|\W+$/g,"").split(/,/)}function extractUrlVariableNames(e){const t=e.match(o);if(!t){return[]}return t.map(removeNonChars).reduce((e,t)=>e.concat(t),[])}function omit(e,t){return Object.keys(e).filter(e=>!t.includes(e)).reduce((t,s)=>{t[s]=e[s];return t},{})}function encodeReserved(e){return e.split(/(%[0-9A-Fa-f]{2})/g).map(function(e){if(!/%[0-9A-Fa-f]/.test(e)){e=encodeURI(e).replace(/%5B/g,"[").replace(/%5D/g,"]")}return e}).join("")}function encodeUnreserved(e){return encodeURIComponent(e).replace(/[!'()*]/g,function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})}function encodeValue(e,t,s){t=e==="+"||e==="#"?encodeReserved(t):encodeUnreserved(t);if(s){return encodeUnreserved(s)+"="+t}else{return t}}function isDefined(e){return e!==undefined&&e!==null}function isKeyOperator(e){return e===";"||e==="&"||e==="?"}function getValues(e,t,s,r){var n=e[s],o=[];if(isDefined(n)&&n!==""){if(typeof n==="string"||typeof n==="number"||typeof n==="boolean"){n=n.toString();if(r&&r!=="*"){n=n.substring(0,parseInt(r,10))}o.push(encodeValue(t,n,isKeyOperator(t)?s:""))}else{if(r==="*"){if(Array.isArray(n)){n.filter(isDefined).forEach(function(e){o.push(encodeValue(t,e,isKeyOperator(t)?s:""))})}else{Object.keys(n).forEach(function(e){if(isDefined(n[e])){o.push(encodeValue(t,n[e],e))}})}}else{const e=[];if(Array.isArray(n)){n.filter(isDefined).forEach(function(s){e.push(encodeValue(t,s))})}else{Object.keys(n).forEach(function(s){if(isDefined(n[s])){e.push(encodeUnreserved(s));e.push(encodeValue(t,n[s].toString()))}})}if(isKeyOperator(t)){o.push(encodeUnreserved(s)+"="+e.join(","))}else if(e.length!==0){o.push(e.join(","))}}}}else{if(t===";"){if(isDefined(n)){o.push(encodeUnreserved(s))}}else if(n===""&&(t==="&"||t==="?")){o.push(encodeUnreserved(s)+"=")}else if(n===""){o.push("")}}return o}function parseUrl(e){return{expand:expand.bind(null,e)}}function expand(e,t){var s=["+","#",".","/",";","?","&"];return e.replace(/\{([^\{\}]+)\}|([^\{\}]+)/g,function(e,r,n){if(r){let e="";const n=[];if(s.indexOf(r.charAt(0))!==-1){e=r.charAt(0);r=r.substr(1)}r.split(/,/g).forEach(function(s){var r=/([^:\*]*)(?::(\d+)|(\*))?/.exec(s);n.push(getValues(t,e,r[1],r[2]||r[3]))});if(e&&e!=="+"){var o=",";if(e==="?"){o="&"}else if(e!=="#"){o=e}return(n.length!==0?e:"")+n.join(o)}else{return n.join(",")}}else{return encodeReserved(n)}})}function parse(e){let t=e.method.toUpperCase();let s=(e.url||"/").replace(/:([a-z]\w+)/g,"{$1}");let r=Object.assign({},e.headers);let n;let o=omit(e,["method","baseUrl","url","headers","request","mediaType"]);const i=extractUrlVariableNames(s);s=parseUrl(s).expand(o);if(!/^http/.test(s)){s=e.baseUrl+s}const a=Object.keys(e).filter(e=>i.includes(e)).concat("baseUrl");const c=omit(o,a);const u=/application\/octet-stream/i.test(r.accept);if(!u){if(e.mediaType.format){r.accept=r.accept.split(/,/).map(t=>t.replace(/application\/vnd(\.\w+)(\.v3)?(\.\w+)?(\+json)?$/,`application/vnd$1$2.${e.mediaType.format}`)).join(",")}if(e.mediaType.previews.length){const t=r.accept.match(/[\w-]+(?=-preview)/g)||[];r.accept=t.concat(e.mediaType.previews).map(t=>{const s=e.mediaType.format?`.${e.mediaType.format}`:"+json";return`application/vnd.github.${t}-preview${s}`}).join(",")}}if(["GET","HEAD"].includes(t)){s=addQueryParameters(s,c)}else{if("data"in c){n=c.data}else{if(Object.keys(c).length){n=c}else{r["content-length"]=0}}}if(!r["content-type"]&&typeof n!=="undefined"){r["content-type"]="application/json; charset=utf-8"}if(["PATCH","PUT"].includes(t)&&typeof n==="undefined"){n=""}return Object.assign({method:t,url:s,headers:r},typeof n!=="undefined"?{body:n}:null,e.request?{request:e.request}:null)}function endpointWithDefaults(e,t,s){return parse(merge(e,t,s))}function withDefaults(e,t){const s=merge(e,t);const r=endpointWithDefaults.bind(null,s);return Object.assign(r,{DEFAULTS:s,defaults:withDefaults.bind(null,s),merge:merge.bind(null,s),parse:parse})}const i="6.0.9";const a=`octokit-endpoint.js/${i} ${n.getUserAgent()}`;const c={method:"GET",baseUrl:"https://api.github.com",headers:{accept:"application/vnd.github.v3+json","user-agent":a},mediaType:{format:"",previews:[]}};const u=withDefaults(null,c);t.endpoint=u},668:(e,t,s)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});var r=s(234);var n=s(429);const o="4.5.7";class GraphqlError extends Error{constructor(e,t){const s=t.data.errors[0].message;super(s);Object.assign(this,t.data);Object.assign(this,{headers:t.headers});this.name="GraphqlError";this.request=e;if(Error.captureStackTrace){Error.captureStackTrace(this,this.constructor)}}}const i=["method","baseUrl","url","headers","request","query","mediaType"];const a=/\/api\/v3\/?$/;function graphql(e,t,s){if(typeof t==="string"&&s&&"query"in s){return Promise.reject(new Error(`[@octokit/graphql] "query" cannot be used as variable name`))}const r=typeof t==="string"?Object.assign({query:t},s):t;const n=Object.keys(r).reduce((e,t)=>{if(i.includes(t)){e[t]=r[t];return e}if(!e.variables){e.variables={}}e.variables[t]=r[t];return e},{});const o=r.baseUrl||e.endpoint.DEFAULTS.baseUrl;if(a.test(o)){n.url=o.replace(a,"/api/graphql")}return e(n).then(e=>{if(e.data.errors){const t={};for(const s of Object.keys(e.headers)){t[s]=e.headers[s]}throw new GraphqlError(n,{headers:t,data:e.data})}return e.data.data})}function withDefaults(e,t){const s=e.defaults(t);const n=(e,t)=>{return graphql(s,e,t)};return Object.assign(n,{defaults:withDefaults.bind(null,s),endpoint:r.request.endpoint})}const c=withDefaults(r.request,{headers:{"user-agent":`octokit-graphql.js/${o} ${n.getUserAgent()}`},method:"POST",url:"/graphql"});function withCustomRequest(e){return withDefaults(e,{method:"POST",url:"/graphql"})}t.graphql=c;t.withCustomRequest=withCustomRequest},193:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});const s="2.6.0";function normalizePaginatedListResponse(e){const t="total_count"in e.data&&!("url"in e.data);if(!t)return e;const s=e.data.incomplete_results;const r=e.data.repository_selection;const n=e.data.total_count;delete e.data.incomplete_results;delete e.data.repository_selection;delete e.data.total_count;const o=Object.keys(e.data)[0];const i=e.data[o];e.data=i;if(typeof s!=="undefined"){e.data.incomplete_results=s}if(typeof r!=="undefined"){e.data.repository_selection=r}e.data.total_count=n;return e}function iterator(e,t,s){const r=typeof t==="function"?t.endpoint(s):e.request.endpoint(t,s);const n=typeof t==="function"?t:e.request;const o=r.method;const i=r.headers;let a=r.url;return{[Symbol.asyncIterator]:()=>({async next(){if(!a)return{done:true};const e=await n({method:o,url:a,headers:i});const t=normalizePaginatedListResponse(e);a=((t.headers.link||"").match(/<([^>]+)>;\s*rel="next"/)||[])[1];return{value:t}}})}}function paginate(e,t,s,r){if(typeof s==="function"){r=s;s=undefined}return gather(e,[],iterator(e,t,s)[Symbol.asyncIterator](),r)}function gather(e,t,s,r){return s.next().then(n=>{if(n.done){return t}let o=false;function done(){o=true}t=t.concat(r?r(n.value,done):n.value.data);if(o){return t}return gather(e,t,s,r)})}const r=Object.assign(paginate,{iterator:iterator});function paginateRest(e){return{paginate:Object.assign(paginate.bind(null,e),{iterator:iterator.bind(null,e)})}}paginateRest.VERSION=s;t.composePaginateRest=r;t.paginateRest=paginateRest},44:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});const s={actions:{addSelectedRepoToOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],cancelWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/cancel"],createOrUpdateOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/actions/secrets/{secret_name}"],createRegistrationTokenForOrg:["POST /orgs/{org}/actions/runners/registration-token"],createRegistrationTokenForRepo:["POST /repos/{owner}/{repo}/actions/runners/registration-token"],createRemoveTokenForOrg:["POST /orgs/{org}/actions/runners/remove-token"],createRemoveTokenForRepo:["POST /repos/{owner}/{repo}/actions/runners/remove-token"],createWorkflowDispatch:["POST /repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatches"],deleteArtifact:["DELETE /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],deleteOrgSecret:["DELETE /orgs/{org}/actions/secrets/{secret_name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/actions/secrets/{secret_name}"],deleteSelfHostedRunnerFromOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}"],deleteSelfHostedRunnerFromRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}"],deleteWorkflowRun:["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}"],deleteWorkflowRunLogs:["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],downloadArtifact:["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}"],downloadJobLogsForWorkflowRun:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}/logs"],downloadWorkflowRunLogs:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],getArtifact:["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],getJobForWorkflowRun:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}"],getOrgPublicKey:["GET /orgs/{org}/actions/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/actions/secrets/{secret_name}"],getRepoPublicKey:["GET /repos/{owner}/{repo}/actions/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/actions/secrets/{secret_name}"],getSelfHostedRunnerForOrg:["GET /orgs/{org}/actions/runners/{runner_id}"],getSelfHostedRunnerForRepo:["GET /repos/{owner}/{repo}/actions/runners/{runner_id}"],getWorkflow:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}"],getWorkflowRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}"],getWorkflowRunUsage:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/timing"],getWorkflowUsage:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/timing"],listArtifactsForRepo:["GET /repos/{owner}/{repo}/actions/artifacts"],listJobsForWorkflowRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs"],listOrgSecrets:["GET /orgs/{org}/actions/secrets"],listRepoSecrets:["GET /repos/{owner}/{repo}/actions/secrets"],listRepoWorkflows:["GET /repos/{owner}/{repo}/actions/workflows"],listRunnerApplicationsForOrg:["GET /orgs/{org}/actions/runners/downloads"],listRunnerApplicationsForRepo:["GET /repos/{owner}/{repo}/actions/runners/downloads"],listSelectedReposForOrgSecret:["GET /orgs/{org}/actions/secrets/{secret_name}/repositories"],listSelfHostedRunnersForOrg:["GET /orgs/{org}/actions/runners"],listSelfHostedRunnersForRepo:["GET /repos/{owner}/{repo}/actions/runners"],listWorkflowRunArtifacts:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts"],listWorkflowRuns:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs"],listWorkflowRunsForRepo:["GET /repos/{owner}/{repo}/actions/runs"],reRunWorkflow:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories"]},activity:{checkRepoIsStarredByAuthenticatedUser:["GET /user/starred/{owner}/{repo}"],deleteRepoSubscription:["DELETE /repos/{owner}/{repo}/subscription"],deleteThreadSubscription:["DELETE /notifications/threads/{thread_id}/subscription"],getFeeds:["GET /feeds"],getRepoSubscription:["GET /repos/{owner}/{repo}/subscription"],getThread:["GET /notifications/threads/{thread_id}"],getThreadSubscriptionForAuthenticatedUser:["GET /notifications/threads/{thread_id}/subscription"],listEventsForAuthenticatedUser:["GET /users/{username}/events"],listNotificationsForAuthenticatedUser:["GET /notifications"],listOrgEventsForAuthenticatedUser:["GET /users/{username}/events/orgs/{org}"],listPublicEvents:["GET /events"],listPublicEventsForRepoNetwork:["GET /networks/{owner}/{repo}/events"],listPublicEventsForUser:["GET /users/{username}/events/public"],listPublicOrgEvents:["GET /orgs/{org}/events"],listReceivedEventsForUser:["GET /users/{username}/received_events"],listReceivedPublicEventsForUser:["GET /users/{username}/received_events/public"],listRepoEvents:["GET /repos/{owner}/{repo}/events"],listRepoNotificationsForAuthenticatedUser:["GET /repos/{owner}/{repo}/notifications"],listReposStarredByAuthenticatedUser:["GET /user/starred"],listReposStarredByUser:["GET /users/{username}/starred"],listReposWatchedByUser:["GET /users/{username}/subscriptions"],listStargazersForRepo:["GET /repos/{owner}/{repo}/stargazers"],listWatchedReposForAuthenticatedUser:["GET /user/subscriptions"],listWatchersForRepo:["GET /repos/{owner}/{repo}/subscribers"],markNotificationsAsRead:["PUT /notifications"],markRepoNotificationsAsRead:["PUT /repos/{owner}/{repo}/notifications"],markThreadAsRead:["PATCH /notifications/threads/{thread_id}"],setRepoSubscription:["PUT /repos/{owner}/{repo}/subscription"],setThreadSubscription:["PUT /notifications/threads/{thread_id}/subscription"],starRepoForAuthenticatedUser:["PUT /user/starred/{owner}/{repo}"],unstarRepoForAuthenticatedUser:["DELETE /user/starred/{owner}/{repo}"]},apps:{addRepoToInstallation:["PUT /user/installations/{installation_id}/repositories/{repository_id}"],checkToken:["POST /applications/{client_id}/token"],createContentAttachment:["POST /content_references/{content_reference_id}/attachments",{mediaType:{previews:["corsair"]}}],createFromManifest:["POST /app-manifests/{code}/conversions"],createInstallationAccessToken:["POST /app/installations/{installation_id}/access_tokens"],deleteAuthorization:["DELETE /applications/{client_id}/grant"],deleteInstallation:["DELETE /app/installations/{installation_id}"],deleteToken:["DELETE /applications/{client_id}/token"],getAuthenticated:["GET /app"],getBySlug:["GET /apps/{app_slug}"],getInstallation:["GET /app/installations/{installation_id}"],getOrgInstallation:["GET /orgs/{org}/installation"],getRepoInstallation:["GET /repos/{owner}/{repo}/installation"],getSubscriptionPlanForAccount:["GET /marketplace_listing/accounts/{account_id}"],getSubscriptionPlanForAccountStubbed:["GET /marketplace_listing/stubbed/accounts/{account_id}"],getUserInstallation:["GET /users/{username}/installation"],listAccountsForPlan:["GET /marketplace_listing/plans/{plan_id}/accounts"],listAccountsForPlanStubbed:["GET /marketplace_listing/stubbed/plans/{plan_id}/accounts"],listInstallationReposForAuthenticatedUser:["GET /user/installations/{installation_id}/repositories"],listInstallations:["GET /app/installations"],listInstallationsForAuthenticatedUser:["GET /user/installations"],listPlans:["GET /marketplace_listing/plans"],listPlansStubbed:["GET /marketplace_listing/stubbed/plans"],listReposAccessibleToInstallation:["GET /installation/repositories"],listSubscriptionsForAuthenticatedUser:["GET /user/marketplace_purchases"],listSubscriptionsForAuthenticatedUserStubbed:["GET /user/marketplace_purchases/stubbed"],removeRepoFromInstallation:["DELETE /user/installations/{installation_id}/repositories/{repository_id}"],resetToken:["PATCH /applications/{client_id}/token"],revokeInstallationAccessToken:["DELETE /installation/token"],suspendInstallation:["PUT /app/installations/{installation_id}/suspended"],unsuspendInstallation:["DELETE /app/installations/{installation_id}/suspended"]},billing:{getGithubActionsBillingOrg:["GET /orgs/{org}/settings/billing/actions"],getGithubActionsBillingUser:["GET /users/{username}/settings/billing/actions"],getGithubPackagesBillingOrg:["GET /orgs/{org}/settings/billing/packages"],getGithubPackagesBillingUser:["GET /users/{username}/settings/billing/packages"],getSharedStorageBillingOrg:["GET /orgs/{org}/settings/billing/shared-storage"],getSharedStorageBillingUser:["GET /users/{username}/settings/billing/shared-storage"]},checks:{create:["POST /repos/{owner}/{repo}/check-runs",{mediaType:{previews:["antiope"]}}],createSuite:["POST /repos/{owner}/{repo}/check-suites",{mediaType:{previews:["antiope"]}}],get:["GET /repos/{owner}/{repo}/check-runs/{check_run_id}",{mediaType:{previews:["antiope"]}}],getSuite:["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}",{mediaType:{previews:["antiope"]}}],listAnnotations:["GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations",{mediaType:{previews:["antiope"]}}],listForRef:["GET /repos/{owner}/{repo}/commits/{ref}/check-runs",{mediaType:{previews:["antiope"]}}],listForSuite:["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs",{mediaType:{previews:["antiope"]}}],listSuitesForRef:["GET /repos/{owner}/{repo}/commits/{ref}/check-suites",{mediaType:{previews:["antiope"]}}],rerequestSuite:["POST /repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequest",{mediaType:{previews:["antiope"]}}],setSuitesPreferences:["PATCH /repos/{owner}/{repo}/check-suites/preferences",{mediaType:{previews:["antiope"]}}],update:["PATCH /repos/{owner}/{repo}/check-runs/{check_run_id}",{mediaType:{previews:["antiope"]}}]},codeScanning:{getAlert:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}",{},{renamedParameters:{alert_id:"alert_number"}}],listAlertsForRepo:["GET /repos/{owner}/{repo}/code-scanning/alerts"],listRecentAnalyses:["GET /repos/{owner}/{repo}/code-scanning/analyses"],updateAlert:["PATCH /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}"],uploadSarif:["POST /repos/{owner}/{repo}/code-scanning/sarifs"]},codesOfConduct:{getAllCodesOfConduct:["GET /codes_of_conduct",{mediaType:{previews:["scarlet-witch"]}}],getConductCode:["GET /codes_of_conduct/{key}",{mediaType:{previews:["scarlet-witch"]}}],getForRepo:["GET /repos/{owner}/{repo}/community/code_of_conduct",{mediaType:{previews:["scarlet-witch"]}}]},emojis:{get:["GET /emojis"]},gists:{checkIsStarred:["GET /gists/{gist_id}/star"],create:["POST /gists"],createComment:["POST /gists/{gist_id}/comments"],delete:["DELETE /gists/{gist_id}"],deleteComment:["DELETE /gists/{gist_id}/comments/{comment_id}"],fork:["POST /gists/{gist_id}/forks"],get:["GET /gists/{gist_id}"],getComment:["GET /gists/{gist_id}/comments/{comment_id}"],getRevision:["GET /gists/{gist_id}/{sha}"],list:["GET /gists"],listComments:["GET /gists/{gist_id}/comments"],listCommits:["GET /gists/{gist_id}/commits"],listForUser:["GET /users/{username}/gists"],listForks:["GET /gists/{gist_id}/forks"],listPublic:["GET /gists/public"],listStarred:["GET /gists/starred"],star:["PUT /gists/{gist_id}/star"],unstar:["DELETE /gists/{gist_id}/star"],update:["PATCH /gists/{gist_id}"],updateComment:["PATCH /gists/{gist_id}/comments/{comment_id}"]},git:{createBlob:["POST /repos/{owner}/{repo}/git/blobs"],createCommit:["POST /repos/{owner}/{repo}/git/commits"],createRef:["POST /repos/{owner}/{repo}/git/refs"],createTag:["POST /repos/{owner}/{repo}/git/tags"],createTree:["POST /repos/{owner}/{repo}/git/trees"],deleteRef:["DELETE /repos/{owner}/{repo}/git/refs/{ref}"],getBlob:["GET /repos/{owner}/{repo}/git/blobs/{file_sha}"],getCommit:["GET /repos/{owner}/{repo}/git/commits/{commit_sha}"],getRef:["GET /repos/{owner}/{repo}/git/ref/{ref}"],getTag:["GET /repos/{owner}/{repo}/git/tags/{tag_sha}"],getTree:["GET /repos/{owner}/{repo}/git/trees/{tree_sha}"],listMatchingRefs:["GET /repos/{owner}/{repo}/git/matching-refs/{ref}"],updateRef:["PATCH /repos/{owner}/{repo}/git/refs/{ref}"]},gitignore:{getAllTemplates:["GET /gitignore/templates"],getTemplate:["GET /gitignore/templates/{name}"]},interactions:{getRestrictionsForOrg:["GET /orgs/{org}/interaction-limits",{mediaType:{previews:["sombra"]}}],getRestrictionsForRepo:["GET /repos/{owner}/{repo}/interaction-limits",{mediaType:{previews:["sombra"]}}],removeRestrictionsForOrg:["DELETE /orgs/{org}/interaction-limits",{mediaType:{previews:["sombra"]}}],removeRestrictionsForRepo:["DELETE /repos/{owner}/{repo}/interaction-limits",{mediaType:{previews:["sombra"]}}],setRestrictionsForOrg:["PUT /orgs/{org}/interaction-limits",{mediaType:{previews:["sombra"]}}],setRestrictionsForRepo:["PUT /repos/{owner}/{repo}/interaction-limits",{mediaType:{previews:["sombra"]}}]},issues:{addAssignees:["POST /repos/{owner}/{repo}/issues/{issue_number}/assignees"],addLabels:["POST /repos/{owner}/{repo}/issues/{issue_number}/labels"],checkUserCanBeAssigned:["GET /repos/{owner}/{repo}/assignees/{assignee}"],create:["POST /repos/{owner}/{repo}/issues"],createComment:["POST /repos/{owner}/{repo}/issues/{issue_number}/comments"],createLabel:["POST /repos/{owner}/{repo}/labels"],createMilestone:["POST /repos/{owner}/{repo}/milestones"],deleteComment:["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}"],deleteLabel:["DELETE /repos/{owner}/{repo}/labels/{name}"],deleteMilestone:["DELETE /repos/{owner}/{repo}/milestones/{milestone_number}"],get:["GET /repos/{owner}/{repo}/issues/{issue_number}"],getComment:["GET /repos/{owner}/{repo}/issues/comments/{comment_id}"],getEvent:["GET /repos/{owner}/{repo}/issues/events/{event_id}"],getLabel:["GET /repos/{owner}/{repo}/labels/{name}"],getMilestone:["GET /repos/{owner}/{repo}/milestones/{milestone_number}"],list:["GET /issues"],listAssignees:["GET /repos/{owner}/{repo}/assignees"],listComments:["GET /repos/{owner}/{repo}/issues/{issue_number}/comments"],listCommentsForRepo:["GET /repos/{owner}/{repo}/issues/comments"],listEvents:["GET /repos/{owner}/{repo}/issues/{issue_number}/events"],listEventsForRepo:["GET /repos/{owner}/{repo}/issues/events"],listEventsForTimeline:["GET /repos/{owner}/{repo}/issues/{issue_number}/timeline",{mediaType:{previews:["mockingbird"]}}],listForAuthenticatedUser:["GET /user/issues"],listForOrg:["GET /orgs/{org}/issues"],listForRepo:["GET /repos/{owner}/{repo}/issues"],listLabelsForMilestone:["GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels"],listLabelsForRepo:["GET /repos/{owner}/{repo}/labels"],listLabelsOnIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/labels"],listMilestones:["GET /repos/{owner}/{repo}/milestones"],lock:["PUT /repos/{owner}/{repo}/issues/{issue_number}/lock"],removeAllLabels:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels"],removeAssignees:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/assignees"],removeLabel:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}"],setLabels:["PUT /repos/{owner}/{repo}/issues/{issue_number}/labels"],unlock:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/lock"],update:["PATCH /repos/{owner}/{repo}/issues/{issue_number}"],updateComment:["PATCH /repos/{owner}/{repo}/issues/comments/{comment_id}"],updateLabel:["PATCH /repos/{owner}/{repo}/labels/{name}"],updateMilestone:["PATCH /repos/{owner}/{repo}/milestones/{milestone_number}"]},licenses:{get:["GET /licenses/{license}"],getAllCommonlyUsed:["GET /licenses"],getForRepo:["GET /repos/{owner}/{repo}/license"]},markdown:{render:["POST /markdown"],renderRaw:["POST /markdown/raw",{headers:{"content-type":"text/plain; charset=utf-8"}}]},meta:{get:["GET /meta"]},migrations:{cancelImport:["DELETE /repos/{owner}/{repo}/import"],deleteArchiveForAuthenticatedUser:["DELETE /user/migrations/{migration_id}/archive",{mediaType:{previews:["wyandotte"]}}],deleteArchiveForOrg:["DELETE /orgs/{org}/migrations/{migration_id}/archive",{mediaType:{previews:["wyandotte"]}}],downloadArchiveForOrg:["GET /orgs/{org}/migrations/{migration_id}/archive",{mediaType:{previews:["wyandotte"]}}],getArchiveForAuthenticatedUser:["GET /user/migrations/{migration_id}/archive",{mediaType:{previews:["wyandotte"]}}],getCommitAuthors:["GET /repos/{owner}/{repo}/import/authors"],getImportStatus:["GET /repos/{owner}/{repo}/import"],getLargeFiles:["GET /repos/{owner}/{repo}/import/large_files"],getStatusForAuthenticatedUser:["GET /user/migrations/{migration_id}",{mediaType:{previews:["wyandotte"]}}],getStatusForOrg:["GET /orgs/{org}/migrations/{migration_id}",{mediaType:{previews:["wyandotte"]}}],listForAuthenticatedUser:["GET /user/migrations",{mediaType:{previews:["wyandotte"]}}],listForOrg:["GET /orgs/{org}/migrations",{mediaType:{previews:["wyandotte"]}}],listReposForOrg:["GET /orgs/{org}/migrations/{migration_id}/repositories",{mediaType:{previews:["wyandotte"]}}],listReposForUser:["GET /user/migrations/{migration_id}/repositories",{mediaType:{previews:["wyandotte"]}}],mapCommitAuthor:["PATCH /repos/{owner}/{repo}/import/authors/{author_id}"],setLfsPreference:["PATCH /repos/{owner}/{repo}/import/lfs"],startForAuthenticatedUser:["POST /user/migrations"],startForOrg:["POST /orgs/{org}/migrations"],startImport:["PUT /repos/{owner}/{repo}/import"],unlockRepoForAuthenticatedUser:["DELETE /user/migrations/{migration_id}/repos/{repo_name}/lock",{mediaType:{previews:["wyandotte"]}}],unlockRepoForOrg:["DELETE /orgs/{org}/migrations/{migration_id}/repos/{repo_name}/lock",{mediaType:{previews:["wyandotte"]}}],updateImport:["PATCH /repos/{owner}/{repo}/import"]},orgs:{blockUser:["PUT /orgs/{org}/blocks/{username}"],checkBlockedUser:["GET /orgs/{org}/blocks/{username}"],checkMembershipForUser:["GET /orgs/{org}/members/{username}"],checkPublicMembershipForUser:["GET /orgs/{org}/public_members/{username}"],convertMemberToOutsideCollaborator:["PUT /orgs/{org}/outside_collaborators/{username}"],createInvitation:["POST /orgs/{org}/invitations"],createWebhook:["POST /orgs/{org}/hooks"],deleteWebhook:["DELETE /orgs/{org}/hooks/{hook_id}"],get:["GET /orgs/{org}"],getMembershipForAuthenticatedUser:["GET /user/memberships/orgs/{org}"],getMembershipForUser:["GET /orgs/{org}/memberships/{username}"],getWebhook:["GET /orgs/{org}/hooks/{hook_id}"],list:["GET /organizations"],listAppInstallations:["GET /orgs/{org}/installations"],listBlockedUsers:["GET /orgs/{org}/blocks"],listForAuthenticatedUser:["GET /user/orgs"],listForUser:["GET /users/{username}/orgs"],listInvitationTeams:["GET /orgs/{org}/invitations/{invitation_id}/teams"],listMembers:["GET /orgs/{org}/members"],listMembershipsForAuthenticatedUser:["GET /user/memberships/orgs"],listOutsideCollaborators:["GET /orgs/{org}/outside_collaborators"],listPendingInvitations:["GET /orgs/{org}/invitations"],listPublicMembers:["GET /orgs/{org}/public_members"],listWebhooks:["GET /orgs/{org}/hooks"],pingWebhook:["POST /orgs/{org}/hooks/{hook_id}/pings"],removeMember:["DELETE /orgs/{org}/members/{username}"],removeMembershipForUser:["DELETE /orgs/{org}/memberships/{username}"],removeOutsideCollaborator:["DELETE /orgs/{org}/outside_collaborators/{username}"],removePublicMembershipForAuthenticatedUser:["DELETE /orgs/{org}/public_members/{username}"],setMembershipForUser:["PUT /orgs/{org}/memberships/{username}"],setPublicMembershipForAuthenticatedUser:["PUT /orgs/{org}/public_members/{username}"],unblockUser:["DELETE /orgs/{org}/blocks/{username}"],update:["PATCH /orgs/{org}"],updateMembershipForAuthenticatedUser:["PATCH /user/memberships/orgs/{org}"],updateWebhook:["PATCH /orgs/{org}/hooks/{hook_id}"]},projects:{addCollaborator:["PUT /projects/{project_id}/collaborators/{username}",{mediaType:{previews:["inertia"]}}],createCard:["POST /projects/columns/{column_id}/cards",{mediaType:{previews:["inertia"]}}],createColumn:["POST /projects/{project_id}/columns",{mediaType:{previews:["inertia"]}}],createForAuthenticatedUser:["POST /user/projects",{mediaType:{previews:["inertia"]}}],createForOrg:["POST /orgs/{org}/projects",{mediaType:{previews:["inertia"]}}],createForRepo:["POST /repos/{owner}/{repo}/projects",{mediaType:{previews:["inertia"]}}],delete:["DELETE /projects/{project_id}",{mediaType:{previews:["inertia"]}}],deleteCard:["DELETE /projects/columns/cards/{card_id}",{mediaType:{previews:["inertia"]}}],deleteColumn:["DELETE /projects/columns/{column_id}",{mediaType:{previews:["inertia"]}}],get:["GET /projects/{project_id}",{mediaType:{previews:["inertia"]}}],getCard:["GET /projects/columns/cards/{card_id}",{mediaType:{previews:["inertia"]}}],getColumn:["GET /projects/columns/{column_id}",{mediaType:{previews:["inertia"]}}],getPermissionForUser:["GET /projects/{project_id}/collaborators/{username}/permission",{mediaType:{previews:["inertia"]}}],listCards:["GET /projects/columns/{column_id}/cards",{mediaType:{previews:["inertia"]}}],listCollaborators:["GET /projects/{project_id}/collaborators",{mediaType:{previews:["inertia"]}}],listColumns:["GET /projects/{project_id}/columns",{mediaType:{previews:["inertia"]}}],listForOrg:["GET /orgs/{org}/projects",{mediaType:{previews:["inertia"]}}],listForRepo:["GET /repos/{owner}/{repo}/projects",{mediaType:{previews:["inertia"]}}],listForUser:["GET /users/{username}/projects",{mediaType:{previews:["inertia"]}}],moveCard:["POST /projects/columns/cards/{card_id}/moves",{mediaType:{previews:["inertia"]}}],moveColumn:["POST /projects/columns/{column_id}/moves",{mediaType:{previews:["inertia"]}}],removeCollaborator:["DELETE /projects/{project_id}/collaborators/{username}",{mediaType:{previews:["inertia"]}}],update:["PATCH /projects/{project_id}",{mediaType:{previews:["inertia"]}}],updateCard:["PATCH /projects/columns/cards/{card_id}",{mediaType:{previews:["inertia"]}}],updateColumn:["PATCH /projects/columns/{column_id}",{mediaType:{previews:["inertia"]}}]},pulls:{checkIfMerged:["GET /repos/{owner}/{repo}/pulls/{pull_number}/merge"],create:["POST /repos/{owner}/{repo}/pulls"],createReplyForReviewComment:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies"],createReview:["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],createReviewComment:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments"],deletePendingReview:["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],deleteReviewComment:["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}"],dismissReview:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissals"],get:["GET /repos/{owner}/{repo}/pulls/{pull_number}"],getReview:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],getReviewComment:["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}"],list:["GET /repos/{owner}/{repo}/pulls"],listCommentsForReview:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments"],listCommits:["GET /repos/{owner}/{repo}/pulls/{pull_number}/commits"],listFiles:["GET /repos/{owner}/{repo}/pulls/{pull_number}/files"],listRequestedReviewers:["GET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],listReviewComments:["GET /repos/{owner}/{repo}/pulls/{pull_number}/comments"],listReviewCommentsForRepo:["GET /repos/{owner}/{repo}/pulls/comments"],listReviews:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],merge:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/merge"],removeRequestedReviewers:["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],requestReviewers:["POST /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],submitReview:["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/events"],update:["PATCH /repos/{owner}/{repo}/pulls/{pull_number}"],updateBranch:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/update-branch",{mediaType:{previews:["lydian"]}}],updateReview:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],updateReviewComment:["PATCH /repos/{owner}/{repo}/pulls/comments/{comment_id}"]},rateLimit:{get:["GET /rate_limit"]},reactions:{createForCommitComment:["POST /repos/{owner}/{repo}/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],createForIssue:["POST /repos/{owner}/{repo}/issues/{issue_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}],createForIssueComment:["POST /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],createForPullRequestReviewComment:["POST /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],createForTeamDiscussionCommentInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}],createForTeamDiscussionInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}],deleteForCommitComment:["DELETE /repos/{owner}/{repo}/comments/{comment_id}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteForIssue:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteForIssueComment:["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteForPullRequestComment:["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteForTeamDiscussion:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteForTeamDiscussionComment:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteLegacy:["DELETE /reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}},{deprecated:"octokit.reactions.deleteLegacy() is deprecated, see https://developer.github.com/v3/reactions/#delete-a-reaction-legacy"}],listForCommitComment:["GET /repos/{owner}/{repo}/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],listForIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}],listForIssueComment:["GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],listForPullRequestReviewComment:["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],listForTeamDiscussionCommentInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}],listForTeamDiscussionInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}]},repos:{acceptInvitation:["PATCH /user/repository_invitations/{invitation_id}"],addAppAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],addCollaborator:["PUT /repos/{owner}/{repo}/collaborators/{username}"],addStatusCheckContexts:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],addTeamAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],addUserAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],checkCollaborator:["GET /repos/{owner}/{repo}/collaborators/{username}"],checkVulnerabilityAlerts:["GET /repos/{owner}/{repo}/vulnerability-alerts",{mediaType:{previews:["dorian"]}}],compareCommits:["GET /repos/{owner}/{repo}/compare/{base}...{head}"],createCommitComment:["POST /repos/{owner}/{repo}/commits/{commit_sha}/comments"],createCommitSignatureProtection:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures",{mediaType:{previews:["zzzax"]}}],createCommitStatus:["POST /repos/{owner}/{repo}/statuses/{sha}"],createDeployKey:["POST /repos/{owner}/{repo}/keys"],createDeployment:["POST /repos/{owner}/{repo}/deployments"],createDeploymentStatus:["POST /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],createDispatchEvent:["POST /repos/{owner}/{repo}/dispatches"],createForAuthenticatedUser:["POST /user/repos"],createFork:["POST /repos/{owner}/{repo}/forks"],createInOrg:["POST /orgs/{org}/repos"],createOrUpdateFileContents:["PUT /repos/{owner}/{repo}/contents/{path}"],createPagesSite:["POST /repos/{owner}/{repo}/pages",{mediaType:{previews:["switcheroo"]}}],createRelease:["POST /repos/{owner}/{repo}/releases"],createUsingTemplate:["POST /repos/{template_owner}/{template_repo}/generate",{mediaType:{previews:["baptiste"]}}],createWebhook:["POST /repos/{owner}/{repo}/hooks"],declineInvitation:["DELETE /user/repository_invitations/{invitation_id}"],delete:["DELETE /repos/{owner}/{repo}"],deleteAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],deleteAdminBranchProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],deleteBranchProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection"],deleteCommitComment:["DELETE /repos/{owner}/{repo}/comments/{comment_id}"],deleteCommitSignatureProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures",{mediaType:{previews:["zzzax"]}}],deleteDeployKey:["DELETE /repos/{owner}/{repo}/keys/{key_id}"],deleteDeployment:["DELETE /repos/{owner}/{repo}/deployments/{deployment_id}"],deleteFile:["DELETE /repos/{owner}/{repo}/contents/{path}"],deleteInvitation:["DELETE /repos/{owner}/{repo}/invitations/{invitation_id}"],deletePagesSite:["DELETE /repos/{owner}/{repo}/pages",{mediaType:{previews:["switcheroo"]}}],deletePullRequestReviewProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],deleteRelease:["DELETE /repos/{owner}/{repo}/releases/{release_id}"],deleteReleaseAsset:["DELETE /repos/{owner}/{repo}/releases/assets/{asset_id}"],deleteWebhook:["DELETE /repos/{owner}/{repo}/hooks/{hook_id}"],disableAutomatedSecurityFixes:["DELETE /repos/{owner}/{repo}/automated-security-fixes",{mediaType:{previews:["london"]}}],disableVulnerabilityAlerts:["DELETE /repos/{owner}/{repo}/vulnerability-alerts",{mediaType:{previews:["dorian"]}}],downloadArchive:["GET /repos/{owner}/{repo}/{archive_format}/{ref}"],enableAutomatedSecurityFixes:["PUT /repos/{owner}/{repo}/automated-security-fixes",{mediaType:{previews:["london"]}}],enableVulnerabilityAlerts:["PUT /repos/{owner}/{repo}/vulnerability-alerts",{mediaType:{previews:["dorian"]}}],get:["GET /repos/{owner}/{repo}"],getAccessRestrictions:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],getAdminBranchProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],getAllStatusCheckContexts:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts"],getAllTopics:["GET /repos/{owner}/{repo}/topics",{mediaType:{previews:["mercy"]}}],getAppsWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps"],getBranch:["GET /repos/{owner}/{repo}/branches/{branch}"],getBranchProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection"],getClones:["GET /repos/{owner}/{repo}/traffic/clones"],getCodeFrequencyStats:["GET /repos/{owner}/{repo}/stats/code_frequency"],getCollaboratorPermissionLevel:["GET /repos/{owner}/{repo}/collaborators/{username}/permission"],getCombinedStatusForRef:["GET /repos/{owner}/{repo}/commits/{ref}/status"],getCommit:["GET /repos/{owner}/{repo}/commits/{ref}"],getCommitActivityStats:["GET /repos/{owner}/{repo}/stats/commit_activity"],getCommitComment:["GET /repos/{owner}/{repo}/comments/{comment_id}"],getCommitSignatureProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures",{mediaType:{previews:["zzzax"]}}],getCommunityProfileMetrics:["GET /repos/{owner}/{repo}/community/profile",{mediaType:{previews:["black-panther"]}}],getContent:["GET /repos/{owner}/{repo}/contents/{path}"],getContributorsStats:["GET /repos/{owner}/{repo}/stats/contributors"],getDeployKey:["GET /repos/{owner}/{repo}/keys/{key_id}"],getDeployment:["GET /repos/{owner}/{repo}/deployments/{deployment_id}"],getDeploymentStatus:["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}"],getLatestPagesBuild:["GET /repos/{owner}/{repo}/pages/builds/latest"],getLatestRelease:["GET /repos/{owner}/{repo}/releases/latest"],getPages:["GET /repos/{owner}/{repo}/pages"],getPagesBuild:["GET /repos/{owner}/{repo}/pages/builds/{build_id}"],getParticipationStats:["GET /repos/{owner}/{repo}/stats/participation"],getPullRequestReviewProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],getPunchCardStats:["GET /repos/{owner}/{repo}/stats/punch_card"],getReadme:["GET /repos/{owner}/{repo}/readme"],getRelease:["GET /repos/{owner}/{repo}/releases/{release_id}"],getReleaseAsset:["GET /repos/{owner}/{repo}/releases/assets/{asset_id}"],getReleaseByTag:["GET /repos/{owner}/{repo}/releases/tags/{tag}"],getStatusChecksProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],getTeamsWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams"],getTopPaths:["GET /repos/{owner}/{repo}/traffic/popular/paths"],getTopReferrers:["GET /repos/{owner}/{repo}/traffic/popular/referrers"],getUsersWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users"],getViews:["GET /repos/{owner}/{repo}/traffic/views"],getWebhook:["GET /repos/{owner}/{repo}/hooks/{hook_id}"],listBranches:["GET /repos/{owner}/{repo}/branches"],listBranchesForHeadCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head",{mediaType:{previews:["groot"]}}],listCollaborators:["GET /repos/{owner}/{repo}/collaborators"],listCommentsForCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/comments"],listCommitCommentsForRepo:["GET /repos/{owner}/{repo}/comments"],listCommitStatusesForRef:["GET /repos/{owner}/{repo}/commits/{ref}/statuses"],listCommits:["GET /repos/{owner}/{repo}/commits"],listContributors:["GET /repos/{owner}/{repo}/contributors"],listDeployKeys:["GET /repos/{owner}/{repo}/keys"],listDeploymentStatuses:["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],listDeployments:["GET /repos/{owner}/{repo}/deployments"],listForAuthenticatedUser:["GET /user/repos"],listForOrg:["GET /orgs/{org}/repos"],listForUser:["GET /users/{username}/repos"],listForks:["GET /repos/{owner}/{repo}/forks"],listInvitations:["GET /repos/{owner}/{repo}/invitations"],listInvitationsForAuthenticatedUser:["GET /user/repository_invitations"],listLanguages:["GET /repos/{owner}/{repo}/languages"],listPagesBuilds:["GET /repos/{owner}/{repo}/pages/builds"],listPublic:["GET /repositories"],listPullRequestsAssociatedWithCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls",{mediaType:{previews:["groot"]}}],listReleaseAssets:["GET /repos/{owner}/{repo}/releases/{release_id}/assets"],listReleases:["GET /repos/{owner}/{repo}/releases"],listTags:["GET /repos/{owner}/{repo}/tags"],listTeams:["GET /repos/{owner}/{repo}/teams"],listWebhooks:["GET /repos/{owner}/{repo}/hooks"],merge:["POST /repos/{owner}/{repo}/merges"],pingWebhook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/pings"],removeAppAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],removeCollaborator:["DELETE /repos/{owner}/{repo}/collaborators/{username}"],removeStatusCheckContexts:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],removeStatusCheckProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],removeTeamAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],removeUserAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],replaceAllTopics:["PUT /repos/{owner}/{repo}/topics",{mediaType:{previews:["mercy"]}}],requestPagesBuild:["POST /repos/{owner}/{repo}/pages/builds"],setAdminBranchProtection:["POST /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],setAppAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],setStatusCheckContexts:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],setTeamAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],setUserAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],testPushWebhook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/tests"],transfer:["POST /repos/{owner}/{repo}/transfer"],update:["PATCH /repos/{owner}/{repo}"],updateBranchProtection:["PUT /repos/{owner}/{repo}/branches/{branch}/protection"],updateCommitComment:["PATCH /repos/{owner}/{repo}/comments/{comment_id}"],updateInformationAboutPagesSite:["PUT /repos/{owner}/{repo}/pages"],updateInvitation:["PATCH /repos/{owner}/{repo}/invitations/{invitation_id}"],updatePullRequestReviewProtection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],updateRelease:["PATCH /repos/{owner}/{repo}/releases/{release_id}"],updateReleaseAsset:["PATCH /repos/{owner}/{repo}/releases/assets/{asset_id}"],updateStatusCheckPotection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],updateWebhook:["PATCH /repos/{owner}/{repo}/hooks/{hook_id}"],uploadReleaseAsset:["POST /repos/{owner}/{repo}/releases/{release_id}/assets{?name,label}",{baseUrl:"https://uploads.github.com"}]},search:{code:["GET /search/code"],commits:["GET /search/commits",{mediaType:{previews:["cloak"]}}],issuesAndPullRequests:["GET /search/issues"],labels:["GET /search/labels"],repos:["GET /search/repositories"],topics:["GET /search/topics",{mediaType:{previews:["mercy"]}}],users:["GET /search/users"]},teams:{addOrUpdateMembershipForUserInOrg:["PUT /orgs/{org}/teams/{team_slug}/memberships/{username}"],addOrUpdateProjectPermissionsInOrg:["PUT /orgs/{org}/teams/{team_slug}/projects/{project_id}",{mediaType:{previews:["inertia"]}}],addOrUpdateRepoPermissionsInOrg:["PUT /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],checkPermissionsForProjectInOrg:["GET /orgs/{org}/teams/{team_slug}/projects/{project_id}",{mediaType:{previews:["inertia"]}}],checkPermissionsForRepoInOrg:["GET /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],create:["POST /orgs/{org}/teams"],createDiscussionCommentInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],createDiscussionInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions"],deleteDiscussionCommentInOrg:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],deleteDiscussionInOrg:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],deleteInOrg:["DELETE /orgs/{org}/teams/{team_slug}"],getByName:["GET /orgs/{org}/teams/{team_slug}"],getDiscussionCommentInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],getDiscussionInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],getMembershipForUserInOrg:["GET /orgs/{org}/teams/{team_slug}/memberships/{username}"],list:["GET /orgs/{org}/teams"],listChildInOrg:["GET /orgs/{org}/teams/{team_slug}/teams"],listDiscussionCommentsInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],listDiscussionsInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions"],listForAuthenticatedUser:["GET /user/teams"],listMembersInOrg:["GET /orgs/{org}/teams/{team_slug}/members"],listPendingInvitationsInOrg:["GET /orgs/{org}/teams/{team_slug}/invitations"],listProjectsInOrg:["GET /orgs/{org}/teams/{team_slug}/projects",{mediaType:{previews:["inertia"]}}],listReposInOrg:["GET /orgs/{org}/teams/{team_slug}/repos"],removeMembershipForUserInOrg:["DELETE /orgs/{org}/teams/{team_slug}/memberships/{username}"],removeProjectInOrg:["DELETE /orgs/{org}/teams/{team_slug}/projects/{project_id}"],removeRepoInOrg:["DELETE /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],updateDiscussionCommentInOrg:["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],updateDiscussionInOrg:["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],updateInOrg:["PATCH /orgs/{org}/teams/{team_slug}"]},users:{addEmailForAuthenticated:["POST /user/emails"],block:["PUT /user/blocks/{username}"],checkBlocked:["GET /user/blocks/{username}"],checkFollowingForUser:["GET /users/{username}/following/{target_user}"],checkPersonIsFollowedByAuthenticated:["GET /user/following/{username}"],createGpgKeyForAuthenticated:["POST /user/gpg_keys"],createPublicSshKeyForAuthenticated:["POST /user/keys"],deleteEmailForAuthenticated:["DELETE /user/emails"],deleteGpgKeyForAuthenticated:["DELETE /user/gpg_keys/{gpg_key_id}"],deletePublicSshKeyForAuthenticated:["DELETE /user/keys/{key_id}"],follow:["PUT /user/following/{username}"],getAuthenticated:["GET /user"],getByUsername:["GET /users/{username}"],getContextForUser:["GET /users/{username}/hovercard"],getGpgKeyForAuthenticated:["GET /user/gpg_keys/{gpg_key_id}"],getPublicSshKeyForAuthenticated:["GET /user/keys/{key_id}"],list:["GET /users"],listBlockedByAuthenticated:["GET /user/blocks"],listEmailsForAuthenticated:["GET /user/emails"],listFollowedByAuthenticated:["GET /user/following"],listFollowersForAuthenticatedUser:["GET /user/followers"],listFollowersForUser:["GET /users/{username}/followers"],listFollowingForUser:["GET /users/{username}/following"],listGpgKeysForAuthenticated:["GET /user/gpg_keys"],listGpgKeysForUser:["GET /users/{username}/gpg_keys"],listPublicEmailsForAuthenticated:["GET /user/public_emails"],listPublicKeysForUser:["GET /users/{username}/keys"],listPublicSshKeysForAuthenticated:["GET /user/keys"],setPrimaryEmailVisibilityForAuthenticated:["PATCH /user/email/visibility"],unblock:["DELETE /user/blocks/{username}"],unfollow:["DELETE /user/following/{username}"],updateAuthenticated:["PATCH /user"]}};const r="4.2.1";function endpointsToMethods(e,t){const s={};for(const[r,n]of Object.entries(t)){for(const[t,o]of Object.entries(n)){const[n,i,a]=o;const[c,u]=n.split(/ /);const l=Object.assign({method:c,url:u},i);if(!s[r]){s[r]={}}const p=s[r];if(a){p[t]=decorate(e,r,t,l,a);continue}p[t]=e.request.defaults(l)}}return s}function decorate(e,t,s,r,n){const o=e.request.defaults(r);function withDecorations(...r){let i=o.endpoint.merge(...r);if(n.mapToData){i=Object.assign({},i,{data:i[n.mapToData],[n.mapToData]:undefined});return o(i)}if(n.renamed){const[r,o]=n.renamed;e.log.warn(`octokit.${t}.${s}() has been renamed to octokit.${r}.${o}()`)}if(n.deprecated){e.log.warn(n.deprecated)}if(n.renamedParameters){const i=o.endpoint.merge(...r);for(const[r,o]of Object.entries(n.renamedParameters)){if(r in i){e.log.warn(`"${r}" parameter is deprecated for "octokit.${t}.${s}()". Use "${o}" instead`);if(!(o in i)){i[o]=i[r]}delete i[r]}}return o(i)}return o(...r)}return Object.assign(withDecorations,o)}function restEndpointMethods(e){return endpointsToMethods(e,s)}restEndpointMethods.VERSION=r;t.restEndpointMethods=restEndpointMethods},537:(e,t,s)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});function _interopDefault(e){return e&&typeof e==="object"&&"default"in e?e["default"]:e}var r=s(481);var n=_interopDefault(s(223));const o=n(e=>console.warn(e));class RequestError extends Error{constructor(e,t,s){super(e);if(Error.captureStackTrace){Error.captureStackTrace(this,this.constructor)}this.name="HttpError";this.status=t;Object.defineProperty(this,"code",{get(){o(new r.Deprecation("[@octokit/request-error] `error.code` is deprecated, use `error.status`."));return t}});this.headers=s.headers||{};const n=Object.assign({},s.request);if(s.request.headers.authorization){n.headers=Object.assign({},s.request.headers,{authorization:s.request.headers.authorization.replace(/ .*$/," [REDACTED]")})}n.url=n.url.replace(/\bclient_secret=\w+/g,"client_secret=[REDACTED]").replace(/\baccess_token=\w+/g,"access_token=[REDACTED]");this.request=n}}t.RequestError=RequestError},234:(e,t,s)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});function _interopDefault(e){return e&&typeof e==="object"&&"default"in e?e["default"]:e}var r=s(440);var n=s(429);var o=s(287);var i=_interopDefault(s(467));var a=s(537);const c="5.4.10";function getBufferResponse(e){return e.arrayBuffer()}function fetchWrapper(e){if(o.isPlainObject(e.body)||Array.isArray(e.body)){e.body=JSON.stringify(e.body)}let t={};let s;let r;const n=e.request&&e.request.fetch||i;return n(e.url,Object.assign({method:e.method,body:e.body,headers:e.headers,redirect:e.redirect},e.request)).then(n=>{r=n.url;s=n.status;for(const e of n.headers){t[e[0]]=e[1]}if(s===204||s===205){return}if(e.method==="HEAD"){if(s<400){return}throw new a.RequestError(n.statusText,s,{headers:t,request:e})}if(s===304){throw new a.RequestError("Not modified",s,{headers:t,request:e})}if(s>=400){return n.text().then(r=>{const n=new a.RequestError(r,s,{headers:t,request:e});try{let e=JSON.parse(n.message);Object.assign(n,e);let t=e.errors;n.message=n.message+": "+t.map(JSON.stringify).join(", ")}catch(e){}throw n})}const o=n.headers.get("content-type");if(/application\/json/.test(o)){return n.json()}if(!o||/^text\/|charset=utf-8$/.test(o)){return n.text()}return getBufferResponse(n)}).then(e=>{return{status:s,url:r,headers:t,data:e}}).catch(s=>{if(s instanceof a.RequestError){throw s}throw new a.RequestError(s.message,500,{headers:t,request:e})})}function withDefaults(e,t){const s=e.defaults(t);const r=function(e,t){const r=s.merge(e,t);if(!r.request||!r.request.hook){return fetchWrapper(s.parse(r))}const n=(e,t)=>{return fetchWrapper(s.parse(s.merge(e,t)))};Object.assign(n,{endpoint:s,defaults:withDefaults.bind(null,s)});return r.request.hook(n,r)};return Object.assign(r,{endpoint:s,defaults:withDefaults.bind(null,s)})}const u=withDefaults(r.endpoint,{headers:{"user-agent":`octokit-request.js/${c} ${n.getUserAgent()}`}});t.request=u},682:(e,t,s)=>{var r=s(670);var n=s(549);var o=s(819);var i=Function.bind;var a=i.bind(i);function bindApi(e,t,s){var r=a(o,null).apply(null,s?[t,s]:[t]);e.api={remove:r};e.remove=r;["before","error","after","wrap"].forEach(function(r){var o=s?[t,r,s]:[t,r];e[r]=e.api[r]=a(n,null).apply(null,o)})}function HookSingular(){var e="h";var t={registry:{}};var s=r.bind(null,t,e);bindApi(s,t,e);return s}function HookCollection(){var e={registry:{}};var t=r.bind(null,e);bindApi(t,e);return t}var c=false;function Hook(){if(!c){console.warn('[before-after-hook]: "Hook()" repurposing warning, use "Hook.Collection()". Read more: https://git.io/upgrade-before-after-hook-to-1.4');c=true}return HookCollection()}Hook.Singular=HookSingular.bind();Hook.Collection=HookCollection.bind();e.exports=Hook;e.exports.Hook=Hook;e.exports.Singular=Hook.Singular;e.exports.Collection=Hook.Collection},549:e=>{e.exports=addHook;function addHook(e,t,s,r){var n=r;if(!e.registry[s]){e.registry[s]=[]}if(t==="before"){r=function(e,t){return Promise.resolve().then(n.bind(null,t)).then(e.bind(null,t))}}if(t==="after"){r=function(e,t){var s;return Promise.resolve().then(e.bind(null,t)).then(function(e){s=e;return n(s,t)}).then(function(){return s})}}if(t==="error"){r=function(e,t){return Promise.resolve().then(e.bind(null,t)).catch(function(e){return n(e,t)})}}e.registry[s].push({hook:r,orig:n})}},670:e=>{e.exports=register;function register(e,t,s,r){if(typeof s!=="function"){throw new Error("method for before hook must be a function")}if(!r){r={}}if(Array.isArray(t)){return t.reverse().reduce(function(t,s){return register.bind(null,e,s,t,r)},s)()}return Promise.resolve().then(function(){if(!e.registry[t]){return s(r)}return e.registry[t].reduce(function(e,t){return t.hook.bind(null,e,r)},s)()})}},819:e=>{e.exports=removeHook;function removeHook(e,t,s){if(!e.registry[t]){return}var r=e.registry[t].map(function(e){return e.orig}).indexOf(s);if(r===-1){return}e.registry[t].splice(r,1)}},942:e=>{class ResizeableBuffer{constructor(e=100){this.size=e;this.length=0;this.buf=Buffer.alloc(e)}prepend(e){if(Buffer.isBuffer(e)){const t=this.length+e.length;if(t>=this.size){this.resize();if(t>=this.size){throw Error("INVALID_BUFFER_STATE")}}const s=this.buf;this.buf=Buffer.alloc(this.size);e.copy(this.buf,0);s.copy(this.buf,e.length);this.length+=e.length}else{const t=this.length++;if(t===this.size){this.resize()}const s=this.clone();this.buf[0]=e;s.copy(this.buf,1,0,t)}}append(e){const t=this.length++;if(t===this.size){this.resize()}this.buf[t]=e}clone(){return Buffer.from(this.buf.slice(0,this.length))}resize(){const e=this.length;this.size=this.size*2;const t=Buffer.alloc(this.size);this.buf.copy(t,0,0,e);this.buf=t}toString(e){if(e){return this.buf.slice(0,this.length).toString(e)}else{return Uint8Array.prototype.slice.call(this.buf.slice(0,this.length))}}toJSON(){return this.toString("utf8")}reset(){this.length=0}}e.exports=ResizeableBuffer},830:(e,t,s)=>{const{Transform:r}=s(413);const n=s(942);const o=9;const i=10;const a=12;const c=13;const u=32;const l={utf8:Buffer.from([239,187,191]),utf16le:Buffer.from([255,254])};class Parser extends r{constructor(e={}){super({...{readableObjectMode:true},...e,encoding:null});this.__originalOptions=e;this.__normalizeOptions(e)}__normalizeOptions(e){const t={};for(let s in e){t[f(s)]=e[s]}if(t.encoding===undefined||t.encoding===true){t.encoding="utf8"}else if(t.encoding===null||t.encoding===false){t.encoding=null}else if(typeof t.encoding!=="string"&&t.encoding!==null){throw new CsvError("CSV_INVALID_OPTION_ENCODING",["Invalid option encoding:","encoding must be a string or null to return a buffer,",`got ${JSON.stringify(t.encoding)}`],t)}if(t.bom===undefined||t.bom===null||t.bom===false){t.bom=false}else if(t.bom!==true){throw new CsvError("CSV_INVALID_OPTION_BOM",["Invalid option bom:","bom must be true,",`got ${JSON.stringify(t.bom)}`],t)}let s=null;if(t.cast===undefined||t.cast===null||t.cast===false||t.cast===""){t.cast=undefined}else if(typeof t.cast==="function"){s=t.cast;t.cast=true}else if(t.cast!==true){throw new CsvError("CSV_INVALID_OPTION_CAST",["Invalid option cast:","cast must be true or a function,",`got ${JSON.stringify(t.cast)}`],t)}if(t.cast_date===undefined||t.cast_date===null||t.cast_date===false||t.cast_date===""){t.cast_date=false}else if(t.cast_date===true){t.cast_date=function(e){const t=Date.parse(e);return!isNaN(t)?new Date(t):e}}else if(typeof t.cast_date!=="function"){throw new CsvError("CSV_INVALID_OPTION_CAST_DATE",["Invalid option cast_date:","cast_date must be true or a function,",`got ${JSON.stringify(t.cast_date)}`],t)}let r=null;if(t.columns===true){r=undefined}else if(typeof t.columns==="function"){r=t.columns;t.columns=true}else if(Array.isArray(t.columns)){t.columns=m(t.columns)}else if(t.columns===undefined||t.columns===null||t.columns===false){t.columns=false}else{throw new CsvError("CSV_INVALID_OPTION_COLUMNS",["Invalid option columns:","expect an object, a function or true,",`got ${JSON.stringify(t.columns)}`],t)}if(t.columns_duplicates_to_array===undefined||t.columns_duplicates_to_array===null||t.columns_duplicates_to_array===false){t.columns_duplicates_to_array=false}else if(t.columns_duplicates_to_array!==true){throw new CsvError("CSV_INVALID_OPTION_COLUMNS_DUPLICATES_TO_ARRAY",["Invalid option columns_duplicates_to_array:","expect an boolean,",`got ${JSON.stringify(t.columns_duplicates_to_array)}`],t)}if(t.comment===undefined||t.comment===null||t.comment===false||t.comment===""){t.comment=null}else{if(typeof t.comment==="string"){t.comment=Buffer.from(t.comment,t.encoding)}if(!Buffer.isBuffer(t.comment)){throw new CsvError("CSV_INVALID_OPTION_COMMENT",["Invalid option comment:","comment must be a buffer or a string,",`got ${JSON.stringify(t.comment)}`],t)}}const o=JSON.stringify(t.delimiter);if(!Array.isArray(t.delimiter))t.delimiter=[t.delimiter];if(t.delimiter.length===0){throw new CsvError("CSV_INVALID_OPTION_DELIMITER",["Invalid option delimiter:","delimiter must be a non empty string or buffer or array of string|buffer,",`got ${o}`],t)}t.delimiter=t.delimiter.map(function(e){if(e===undefined||e===null||e===false){return Buffer.from(",",t.encoding)}if(typeof e==="string"){e=Buffer.from(e,t.encoding)}if(!Buffer.isBuffer(e)||e.length===0){throw new CsvError("CSV_INVALID_OPTION_DELIMITER",["Invalid option delimiter:","delimiter must be a non empty string or buffer or array of string|buffer,",`got ${o}`],t)}return e});if(t.escape===undefined||t.escape===true){t.escape=Buffer.from('"',t.encoding)}else if(typeof t.escape==="string"){t.escape=Buffer.from(t.escape,t.encoding)}else if(t.escape===null||t.escape===false){t.escape=null}if(t.escape!==null){if(!Buffer.isBuffer(t.escape)){throw new Error(`Invalid Option: escape must be a buffer, a string or a boolean, got ${JSON.stringify(t.escape)}`)}}if(t.from===undefined||t.from===null){t.from=1}else{if(typeof t.from==="string"&&/\d+/.test(t.from)){t.from=parseInt(t.from)}if(Number.isInteger(t.from)){if(t.from<0){throw new Error(`Invalid Option: from must be a positive integer, got ${JSON.stringify(e.from)}`)}}else{throw new Error(`Invalid Option: from must be an integer, got ${JSON.stringify(t.from)}`)}}if(t.from_line===undefined||t.from_line===null){t.from_line=1}else{if(typeof t.from_line==="string"&&/\d+/.test(t.from_line)){t.from_line=parseInt(t.from_line)}if(Number.isInteger(t.from_line)){if(t.from_line<=0){throw new Error(`Invalid Option: from_line must be a positive integer greater than 0, got ${JSON.stringify(e.from_line)}`)}}else{throw new Error(`Invalid Option: from_line must be an integer, got ${JSON.stringify(e.from_line)}`)}}if(t.info===undefined||t.info===null||t.info===false){t.info=false}else if(t.info!==true){throw new Error(`Invalid Option: info must be true, got ${JSON.stringify(t.info)}`)}if(t.max_record_size===undefined||t.max_record_size===null||t.max_record_size===false){t.max_record_size=0}else if(Number.isInteger(t.max_record_size)&&t.max_record_size>=0){}else if(typeof t.max_record_size==="string"&&/\d+/.test(t.max_record_size)){t.max_record_size=parseInt(t.max_record_size)}else{throw new Error(`Invalid Option: max_record_size must be a positive integer, got ${JSON.stringify(t.max_record_size)}`)}if(t.objname===undefined||t.objname===null||t.objname===false){t.objname=undefined}else if(Buffer.isBuffer(t.objname)){if(t.objname.length===0){throw new Error(`Invalid Option: objname must be a non empty buffer`)}if(t.encoding===null){}else{t.objname=t.objname.toString(t.encoding)}}else if(typeof t.objname==="string"){if(t.objname.length===0){throw new Error(`Invalid Option: objname must be a non empty string`)}}else{throw new Error(`Invalid Option: objname must be a string or a buffer, got ${t.objname}`)}if(t.on_record===undefined||t.on_record===null){t.on_record=undefined}else if(typeof t.on_record!=="function"){throw new CsvError("CSV_INVALID_OPTION_ON_RECORD",["Invalid option `on_record`:","expect a function,",`got ${JSON.stringify(t.on_record)}`],t)}if(t.quote===null||t.quote===false||t.quote===""){t.quote=null}else{if(t.quote===undefined||t.quote===true){t.quote=Buffer.from('"',t.encoding)}else if(typeof t.quote==="string"){t.quote=Buffer.from(t.quote,t.encoding)}if(!Buffer.isBuffer(t.quote)){throw new Error(`Invalid Option: quote must be a buffer or a string, got ${JSON.stringify(t.quote)}`)}}if(t.raw===undefined||t.raw===null||t.raw===false){t.raw=false}else if(t.raw!==true){throw new Error(`Invalid Option: raw must be true, got ${JSON.stringify(t.raw)}`)}if(!t.record_delimiter){t.record_delimiter=[]}else if(!Array.isArray(t.record_delimiter)){t.record_delimiter=[t.record_delimiter]}t.record_delimiter=t.record_delimiter.map(function(e){if(typeof e==="string"){e=Buffer.from(e,t.encoding)}return e});if(typeof t.relax==="boolean"){}else if(t.relax===undefined||t.relax===null){t.relax=false}else{throw new Error(`Invalid Option: relax must be a boolean, got ${JSON.stringify(t.relax)}`)}if(typeof t.relax_column_count==="boolean"){}else if(t.relax_column_count===undefined||t.relax_column_count===null){t.relax_column_count=false}else{throw new Error(`Invalid Option: relax_column_count must be a boolean, got ${JSON.stringify(t.relax_column_count)}`)}if(typeof t.relax_column_count_less==="boolean"){}else if(t.relax_column_count_less===undefined||t.relax_column_count_less===null){t.relax_column_count_less=false}else{throw new Error(`Invalid Option: relax_column_count_less must be a boolean, got ${JSON.stringify(t.relax_column_count_less)}`)}if(typeof t.relax_column_count_more==="boolean"){}else if(t.relax_column_count_more===undefined||t.relax_column_count_more===null){t.relax_column_count_more=false}else{throw new Error(`Invalid Option: relax_column_count_more must be a boolean, got ${JSON.stringify(t.relax_column_count_more)}`)}if(typeof t.skip_empty_lines==="boolean"){}else if(t.skip_empty_lines===undefined||t.skip_empty_lines===null){t.skip_empty_lines=false}else{throw new Error(`Invalid Option: skip_empty_lines must be a boolean, got ${JSON.stringify(t.skip_empty_lines)}`)}if(typeof t.skip_lines_with_empty_values==="boolean"){}else if(t.skip_lines_with_empty_values===undefined||t.skip_lines_with_empty_values===null){t.skip_lines_with_empty_values=false}else{throw new Error(`Invalid Option: skip_lines_with_empty_values must be a boolean, got ${JSON.stringify(t.skip_lines_with_empty_values)}`)}if(typeof t.skip_lines_with_error==="boolean"){}else if(t.skip_lines_with_error===undefined||t.skip_lines_with_error===null){t.skip_lines_with_error=false}else{throw new Error(`Invalid Option: skip_lines_with_error must be a boolean, got ${JSON.stringify(t.skip_lines_with_error)}`)}if(t.rtrim===undefined||t.rtrim===null||t.rtrim===false){t.rtrim=false}else if(t.rtrim!==true){throw new Error(`Invalid Option: rtrim must be a boolean, got ${JSON.stringify(t.rtrim)}`)}if(t.ltrim===undefined||t.ltrim===null||t.ltrim===false){t.ltrim=false}else if(t.ltrim!==true){throw new Error(`Invalid Option: ltrim must be a boolean, got ${JSON.stringify(t.ltrim)}`)}if(t.trim===undefined||t.trim===null||t.trim===false){t.trim=false}else if(t.trim!==true){throw new Error(`Invalid Option: trim must be a boolean, got ${JSON.stringify(t.trim)}`)}if(t.trim===true&&e.ltrim!==false){t.ltrim=true}else if(t.ltrim!==true){t.ltrim=false}if(t.trim===true&&e.rtrim!==false){t.rtrim=true}else if(t.rtrim!==true){t.rtrim=false}if(t.to===undefined||t.to===null){t.to=-1}else{if(typeof t.to==="string"&&/\d+/.test(t.to)){t.to=parseInt(t.to)}if(Number.isInteger(t.to)){if(t.to<=0){throw new Error(`Invalid Option: to must be a positive integer greater than 0, got ${JSON.stringify(e.to)}`)}}else{throw new Error(`Invalid Option: to must be an integer, got ${JSON.stringify(e.to)}`)}}if(t.to_line===undefined||t.to_line===null){t.to_line=-1}else{if(typeof t.to_line==="string"&&/\d+/.test(t.to_line)){t.to_line=parseInt(t.to_line)}if(Number.isInteger(t.to_line)){if(t.to_line<=0){throw new Error(`Invalid Option: to_line must be a positive integer greater than 0, got ${JSON.stringify(e.to_line)}`)}}else{throw new Error(`Invalid Option: to_line must be an integer, got ${JSON.stringify(e.to_line)}`)}}this.info={comment_lines:0,empty_lines:0,invalid_field_length:0,lines:1,records:0};this.options=t;this.state={bomSkipped:false,castField:s,commenting:false,error:undefined,enabled:t.from_line===1,escaping:false,escapeIsQuote:Buffer.isBuffer(t.escape)&&Buffer.isBuffer(t.quote)&&Buffer.compare(t.escape,t.quote)===0,expectedRecordLength:t.columns===null?0:t.columns.length,field:new n(20),firstLineToHeaders:r,info:Object.assign({},this.info),needMoreDataSize:Math.max(t.comment!==null?t.comment.length:0,...t.delimiter.map(e=>e.length),t.quote!==null?t.quote.length:0),previousBuf:undefined,quoting:false,stop:false,rawBuffer:new n(100),record:[],recordHasError:false,record_length:0,recordDelimiterMaxLength:t.record_delimiter.length===0?2:Math.max(...t.record_delimiter.map(e=>e.length)),trimChars:[Buffer.from(" ",t.encoding)[0],Buffer.from("\t",t.encoding)[0]],wasQuoting:false,wasRowDelimiter:false}}_transform(e,t,s){if(this.state.stop===true){return}const r=this.__parse(e,false);if(r!==undefined){this.state.stop=true}s(r)}_flush(e){if(this.state.stop===true){return}const t=this.__parse(undefined,true);e(t)}__parse(e,t){const{bom:s,comment:r,escape:n,from_line:o,info:a,ltrim:u,max_record_size:p,quote:f,raw:d,relax:h,rtrim:m,skip_empty_lines:g,to:_,to_line:w}=this.options;let{record_delimiter:T}=this.options;const{bomSkipped:E,previousBuf:y,rawBuffer:b,escapeIsQuote:O}=this.state;let v;if(y===undefined){if(e===undefined){this.push(null);return}else{v=e}}else if(y!==undefined&&e===undefined){v=y}else{v=Buffer.concat([y,e])}if(E===false){if(s===false){this.state.bomSkipped=true}else if(v.length<3){if(t===false){this.state.previousBuf=v;return}}else{for(let e in l){if(l[e].compare(v,0,l[e].length)===0){v=v.slice(l[e].length);this.__normalizeOptions({...this.__originalOptions,encoding:e});break}}this.state.bomSkipped=true}}const S=v.length;let P;for(P=0;P<S;P++){if(this.__needMoreData(P,S,t)){break}if(this.state.wasRowDelimiter===true){this.info.lines++;if(a===true&&this.state.record.length===0&&this.state.field.length===0&&this.state.wasQuoting===false){this.state.info=Object.assign({},this.info)}this.state.wasRowDelimiter=false}if(w!==-1&&this.info.lines>w){this.state.stop=true;this.push(null);return}if(this.state.quoting===false&&T.length===0){const e=this.__autoDiscoverRowDelimiter(v,P);if(e){T=this.options.record_delimiter}}const e=v[P];if(d===true){b.append(e)}if((e===c||e===i)&&this.state.wasRowDelimiter===false){this.state.wasRowDelimiter=true}if(this.state.escaping===true){this.state.escaping=false}else{if(n!==null&&this.state.quoting===true&&this.__isEscape(v,P,e)&&P+n.length<S){if(O){if(this.__isQuote(v,P+n.length)){this.state.escaping=true;P+=n.length-1;continue}}else{this.state.escaping=true;P+=n.length-1;continue}}if(this.state.commenting===false&&this.__isQuote(v,P)){if(this.state.quoting===true){const t=v[P+f.length];const s=m&&this.__isCharTrimable(t);const o=r!==null&&this.__compareBytes(r,v,P+f.length,t);const i=this.__isDelimiter(v,P+f.length,t);const a=T.length===0?this.__autoDiscoverRowDelimiter(v,P+f.length):this.__isRecordDelimiter(t,v,P+f.length);if(n!==null&&this.__isEscape(v,P,e)&&this.__isQuote(v,P+n.length)){P+=n.length-1}else if(!t||i||a||o||s){this.state.quoting=false;this.state.wasQuoting=true;P+=f.length-1;continue}else if(h===false){const e=this.__error(new CsvError("CSV_INVALID_CLOSING_QUOTE",["Invalid Closing Quote:",`got "${String.fromCharCode(t)}"`,`at line ${this.info.lines}`,"instead of delimiter, row delimiter, trimable character","(if activated) or comment"],this.options,this.__context()));if(e!==undefined)return e}else{this.state.quoting=false;this.state.wasQuoting=true;this.state.field.prepend(f);P+=f.length-1}}else{if(this.state.field.length!==0){if(h===false){const e=this.__error(new CsvError("INVALID_OPENING_QUOTE",["Invalid Opening Quote:",`a quote is found inside a field at line ${this.info.lines}`],this.options,this.__context(),{field:this.state.field}));if(e!==undefined)return e}}else{this.state.quoting=true;P+=f.length-1;continue}}}if(this.state.quoting===false){let t=this.__isRecordDelimiter(e,v,P);if(t!==0){const e=this.state.commenting&&(this.state.wasQuoting===false&&this.state.record.length===0&&this.state.field.length===0);if(e){this.info.comment_lines++}else{if(g===true&&this.state.wasQuoting===false&&this.state.record.length===0&&this.state.field.length===0){this.info.empty_lines++;P+=t-1;continue}if(this.state.enabled===false&&this.info.lines+(this.state.wasRowDelimiter===true?1:0)>=o){this.state.enabled=true;this.__resetField();this.__resetRow();P+=t-1;continue}else{const e=this.__onField();if(e!==undefined)return e;const t=this.__onRow();if(t!==undefined)return t}if(_!==-1&&this.info.records>=_){this.state.stop=true;this.push(null);return}}this.state.commenting=false;P+=t-1;continue}if(this.state.commenting){continue}const s=r===null?0:this.__compareBytes(r,v,P,e);if(s!==0){this.state.commenting=true;continue}let n=this.__isDelimiter(v,P,e);if(n!==0){const e=this.__onField();if(e!==undefined)return e;P+=n-1;continue}}}if(this.state.commenting===false){if(p!==0&&this.state.record_length+this.state.field.length>p){const e=this.__error(new CsvError("CSV_MAX_RECORD_SIZE",["Max Record Size:","record exceed the maximum number of tolerated bytes",`of ${p}`,`at line ${this.info.lines}`],this.options,this.__context()));if(e!==undefined)return e}}const s=u===false||this.state.quoting===true||this.state.field.length!==0||!this.__isCharTrimable(e);const l=m===false||this.state.wasQuoting===false;if(s===true&&l===true){this.state.field.append(e)}else if(m===true&&!this.__isCharTrimable(e)){const e=this.__error(new CsvError("CSV_NON_TRIMABLE_CHAR_AFTER_CLOSING_QUOTE",["Invalid Closing Quote:","found non trimable byte after quote",`at line ${this.info.lines}`],this.options,this.__context()));if(e!==undefined)return e}}if(t===true){if(this.state.quoting===true){const e=this.__error(new CsvError("CSV_QUOTE_NOT_CLOSED",["Quote Not Closed:",`the parsing is finished with an opening quote at line ${this.info.lines}`],this.options,this.__context()));if(e!==undefined)return e}else{if(this.state.wasQuoting===true||this.state.record.length!==0||this.state.field.length!==0){const e=this.__onField();if(e!==undefined)return e;const t=this.__onRow();if(t!==undefined)return t}else if(this.state.wasRowDelimiter===true){this.info.empty_lines++}else if(this.state.commenting===true){this.info.comment_lines++}}}else{this.state.previousBuf=v.slice(P)}if(this.state.wasRowDelimiter===true){this.info.lines++;this.state.wasRowDelimiter=false}}__isCharTrimable(e){return e===u||e===o||e===c||e===i||e===a}__onRow(){const{columns:e,columns_duplicates_to_array:t,encoding:s,info:r,from:n,relax_column_count:o,relax_column_count_less:i,relax_column_count_more:a,raw:c,skip_lines_with_empty_values:u}=this.options;const{enabled:l,record:p}=this.state;if(l===false){return this.__resetRow()}const f=p.length;if(e===true){if(h(p)){this.__resetRow();return}return this.__firstLineToColumns(p)}if(e===false&&this.info.records===0){this.state.expectedRecordLength=f}if(f!==this.state.expectedRecordLength){const t=e===false?this.__error(new CsvError("CSV_INCONSISTENT_RECORD_LENGTH",["Invalid Record Length:",`expect ${this.state.expectedRecordLength},`,`got ${f} on line ${this.info.lines}`],this.options,this.__context(),{record:p})):this.__error(new CsvError("CSV_RECORD_DONT_MATCH_COLUMNS_LENGTH",["Invalid Record Length:",`columns length is ${e.length},`,`got ${f} on line ${this.info.lines}`],this.options,this.__context(),{record:p}));if(o===true||i===true&&f<this.state.expectedRecordLength||a===true&&f>this.state.expectedRecordLength){this.info.invalid_field_length++;this.state.error=t}else if(t!==undefined){return t}}if(u===true){if(h(p)){this.__resetRow();return}}if(this.state.recordHasError===true){this.__resetRow();this.state.recordHasError=false;return}this.info.records++;if(n===1||this.info.records>=n){if(e!==false){const n={};for(let s=0,r=p.length;s<r;s++){if(e[s]===undefined||e[s].disabled)continue;if(t===true&&n[e[s].name]){if(Array.isArray(n[e[s].name])){n[e[s].name]=n[e[s].name].concat(p[s])}else{n[e[s].name]=[n[e[s].name],p[s]]}}else{n[e[s].name]=p[s]}}const{objname:o}=this.options;if(o===undefined){if(c===true||r===true){const e=this.__push(Object.assign({record:n},c===true?{raw:this.state.rawBuffer.toString(s)}:{},r===true?{info:this.state.info}:{}));if(e){return e}}else{const e=this.__push(n);if(e){return e}}}else{if(c===true||r===true){const e=this.__push(Object.assign({record:[n[o],n]},c===true?{raw:this.state.rawBuffer.toString(s)}:{},r===true?{info:this.state.info}:{}));if(e){return e}}else{const e=this.__push([n[o],n]);if(e){return e}}}}else{if(c===true||r===true){const e=this.__push(Object.assign({record:p},c===true?{raw:this.state.rawBuffer.toString(s)}:{},r===true?{info:this.state.info}:{}));if(e){return e}}else{const e=this.__push(p);if(e){return e}}}}this.__resetRow()}__firstLineToColumns(e){const{firstLineToHeaders:t}=this.state;try{const s=t===undefined?e:t.call(null,e);if(!Array.isArray(s)){return this.__error(new CsvError("CSV_INVALID_COLUMN_MAPPING",["Invalid Column Mapping:","expect an array from column function,",`got ${JSON.stringify(s)}`],this.options,this.__context(),{headers:s}))}const r=m(s);this.state.expectedRecordLength=r.length;this.options.columns=r;this.__resetRow();return}catch(e){return e}}__resetRow(){if(this.options.raw===true){this.state.rawBuffer.reset()}this.state.error=undefined;this.state.record=[];this.state.record_length=0}__onField(){const{cast:e,encoding:t,rtrim:s,max_record_size:r}=this.options;const{enabled:n,wasQuoting:o}=this.state;if(n===false){return this.__resetField()}let i=this.state.field.toString(t);if(s===true&&o===false){i=i.trimRight()}if(e===true){const[e,t]=this.__cast(i);if(e!==undefined)return e;i=t}this.state.record.push(i);if(r!==0&&typeof i==="string"){this.state.record_length+=i.length}this.__resetField()}__resetField(){this.state.field.reset();this.state.wasQuoting=false}__push(e){const{on_record:t}=this.options;if(t!==undefined){const s=this.__context();try{e=t.call(null,e,s)}catch(e){return e}if(e===undefined||e===null){return}}this.push(e)}__cast(e){const{columns:t,relax_column_count:s}=this.options;const r=Array.isArray(t);if(r===true&&s&&this.options.columns.length<=this.state.record.length){return[undefined,undefined]}const n=this.__context();if(this.state.castField!==null){try{return[undefined,this.state.castField.call(null,e,n)]}catch(e){return[e]}}if(this.__isFloat(e)){return[undefined,parseFloat(e)]}else if(this.options.cast_date!==false){return[undefined,this.options.cast_date.call(null,e,n)]}return[undefined,e]}__isFloat(e){return e-parseFloat(e)+1>=0}__compareBytes(e,t,s,r){if(e[0]!==r)return 0;const n=e.length;for(let r=1;r<n;r++){if(e[r]!==t[s+r])return 0}return n}__needMoreData(e,t,s){if(s)return false;const{quote:r}=this.options;const{quoting:n,needMoreDataSize:o,recordDelimiterMaxLength:i}=this.state;const a=t-e-1;const c=Math.max(o,i,n?r.length+i:0);return a<c}__isDelimiter(e,t,s){const{delimiter:r}=this.options;e:for(let n=0;n<r.length;n++){const o=r[n];if(o[0]===s){for(let s=1;s<o.length;s++){if(o[s]!==e[t+s])continue e}return o.length}}return 0}__isRecordDelimiter(e,t,s){const{record_delimiter:r}=this.options;const n=r.length;e:for(let o=0;o<n;o++){const n=r[o];const i=n.length;if(n[0]!==e){continue}for(let e=1;e<i;e++){if(n[e]!==t[s+e]){continue e}}return n.length}return 0}__isEscape(e,t,s){const{escape:r}=this.options;if(r===null)return false;const n=r.length;if(r[0]===s){for(let s=0;s<n;s++){if(r[s]!==e[t+s]){return false}}return true}return false}__isQuote(e,t){const{quote:s}=this.options;if(s===null)return false;const r=s.length;for(let n=0;n<r;n++){if(s[n]!==e[t+n]){return false}}return true}__autoDiscoverRowDelimiter(e,t){const{encoding:s}=this.options;const r=e[t];if(r===c){if(e[t+1]===i){this.options.record_delimiter.push(Buffer.from("\r\n",s));this.state.recordDelimiterMaxLength=2;return 2}else{this.options.record_delimiter.push(Buffer.from("\r",s));this.state.recordDelimiterMaxLength=1;return 1}}else if(r===i){this.options.record_delimiter.push(Buffer.from("\n",s));this.state.recordDelimiterMaxLength=1;return 1}return 0}__error(e){const{skip_lines_with_error:t}=this.options;const s=typeof e==="string"?new Error(e):e;if(t){this.state.recordHasError=true;this.emit("skip",s);return undefined}else{return s}}__context(){const{columns:e}=this.options;const t=Array.isArray(e);return{column:t===true?e.length>this.state.record.length?e[this.state.record.length].name:null:this.state.record.length,empty_lines:this.info.empty_lines,error:this.state.error,header:e===true,index:this.state.record.length,invalid_field_length:this.info.invalid_field_length,quoting:this.state.wasQuoting,lines:this.info.lines,records:this.info.records}}}const p=function(){let e,t,s;for(let r in arguments){const n=arguments[r];const o=typeof n;if(e===undefined&&(typeof n==="string"||Buffer.isBuffer(n))){e=n}else if(t===undefined&&d(n)){t=n}else if(s===undefined&&o==="function"){s=n}else{throw new CsvError("CSV_INVALID_ARGUMENT",["Invalid argument:",`got ${JSON.stringify(n)} at index ${r}`],this.options)}}const r=new Parser(t);if(s){const e=t===undefined||t.objname===undefined?[]:{};r.on("readable",function(){let s;while((s=this.read())!==null){if(t===undefined||t.objname===undefined){e.push(s)}else{e[s[0]]=s[1]}}});r.on("error",function(e){s(e,undefined,r.info)});r.on("end",function(){s(undefined,e,r.info)})}if(e!==undefined){if(typeof setImmediate==="function"){setImmediate(function(){r.write(e);r.end()})}else{r.write(e);r.end()}}return r};class CsvError extends Error{constructor(e,t,s,...r){if(Array.isArray(t))t=t.join(" ");super(t);if(Error.captureStackTrace!==undefined){Error.captureStackTrace(this,CsvError)}this.code=e;for(const e of r){for(const t in e){const r=e[t];this[t]=Buffer.isBuffer(r)?r.toString(s.encoding):r==null?r:JSON.parse(JSON.stringify(r))}}}}p.Parser=Parser;p.CsvError=CsvError;e.exports=p;const f=function(e){return e.replace(/([A-Z])/g,function(e,t){return"_"+t.toLowerCase()})};const d=function(e){return typeof e==="object"&&e!==null&&!Array.isArray(e)};const h=function(e){return e.every(e=>e==null||e.toString&&e.toString().trim()==="")};const m=function(e){const t=[];for(let s=0,r=e.length;s<r;s++){const r=e[s];if(r===undefined||r===null||r===false){t[s]={disabled:true}}else if(typeof r==="string"){t[s]={name:r}}else if(d(r)){if(typeof r.name!=="string"){throw new CsvError("CSV_OPTION_COLUMNS_MISSING_NAME",["Option columns missing name:",`property "name" is required at position ${s}`,"when column is an object literal"])}t[s]=r}else{throw new CsvError("CSV_INVALID_COLUMN_DEFINITION",["Invalid column definition:","expect a string or a literal object,",`got ${JSON.stringify(r)} at position ${s}`])}}return t}},750:(e,t,s)=>{const r=s(830);e.exports=function(e,t={}){if(typeof e==="string"){e=Buffer.from(e)}const s=t&&t.objname?{}:[];const n=new r.Parser(t);n.push=function(e){if(e===null){return}if(t.objname===undefined)s.push(e);else{s[e[0]]=e[1]}};const o=n.__parse(e,false);if(o!==undefined)throw o;const i=n.__parse(undefined,true);if(i!==undefined)throw i;return s}},481:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});class Deprecation extends Error{constructor(e){super(e);if(Error.captureStackTrace){Error.captureStackTrace(this,this.constructor)}this.name="Deprecation"}}t.Deprecation=Deprecation},287:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});function isObject(e){return Object.prototype.toString.call(e)==="[object Object]"}function isPlainObject(e){var t,s;if(isObject(e)===false)return false;t=e.constructor;if(t===undefined)return true;s=t.prototype;if(isObject(s)===false)return false;if(s.hasOwnProperty("isPrototypeOf")===false){return false}return true}t.isPlainObject=isPlainObject},467:(e,t,s)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});function _interopDefault(e){return e&&typeof e==="object"&&"default"in e?e["default"]:e}var r=_interopDefault(s(413));var n=_interopDefault(s(605));var o=_interopDefault(s(835));var i=_interopDefault(s(211));var a=_interopDefault(s(761));const c=r.Readable;const u=Symbol("buffer");const l=Symbol("type");class Blob{constructor(){this[l]="";const e=arguments[0];const t=arguments[1];const s=[];let r=0;if(e){const t=e;const n=Number(t.length);for(let e=0;e<n;e++){const n=t[e];let o;if(n instanceof Buffer){o=n}else if(ArrayBuffer.isView(n)){o=Buffer.from(n.buffer,n.byteOffset,n.byteLength)}else if(n instanceof ArrayBuffer){o=Buffer.from(n)}else if(n instanceof Blob){o=n[u]}else{o=Buffer.from(typeof n==="string"?n:String(n))}r+=o.length;s.push(o)}}this[u]=Buffer.concat(s);let n=t&&t.type!==undefined&&String(t.type).toLowerCase();if(n&&!/[^\u0020-\u007E]/.test(n)){this[l]=n}}get size(){return this[u].length}get type(){return this[l]}text(){return Promise.resolve(this[u].toString())}arrayBuffer(){const e=this[u];const t=e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength);return Promise.resolve(t)}stream(){const e=new c;e._read=function(){};e.push(this[u]);e.push(null);return e}toString(){return"[object Blob]"}slice(){const e=this.size;const t=arguments[0];const s=arguments[1];let r,n;if(t===undefined){r=0}else if(t<0){r=Math.max(e+t,0)}else{r=Math.min(t,e)}if(s===undefined){n=e}else if(s<0){n=Math.max(e+s,0)}else{n=Math.min(s,e)}const o=Math.max(n-r,0);const i=this[u];const a=i.slice(r,r+o);const c=new Blob([],{type:arguments[2]});c[u]=a;return c}}Object.defineProperties(Blob.prototype,{size:{enumerable:true},type:{enumerable:true},slice:{enumerable:true}});Object.defineProperty(Blob.prototype,Symbol.toStringTag,{value:"Blob",writable:false,enumerable:false,configurable:true});function FetchError(e,t,s){Error.call(this,e);this.message=e;this.type=t;if(s){this.code=this.errno=s.code}Error.captureStackTrace(this,this.constructor)}FetchError.prototype=Object.create(Error.prototype);FetchError.prototype.constructor=FetchError;FetchError.prototype.name="FetchError";let p;try{p=s(877).convert}catch(e){}const f=Symbol("Body internals");const d=r.PassThrough;function Body(e){var t=this;var s=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{},n=s.size;let o=n===undefined?0:n;var i=s.timeout;let a=i===undefined?0:i;if(e==null){e=null}else if(isURLSearchParams(e)){e=Buffer.from(e.toString())}else if(isBlob(e))   ;else if(Buffer.isBuffer(e))   ;else if(Object.prototype.toString.call(e)==="[object ArrayBuffer]"){e=Buffer.from(e)}else if(ArrayBuffer.isView(e)){e=Buffer.from(e.buffer,e.byteOffset,e.byteLength)}else if(e instanceof r)   ;else{e=Buffer.from(String(e))}this[f]={body:e,disturbed:false,error:null};this.size=o;this.timeout=a;if(e instanceof r){e.on("error",function(e){const s=e.name==="AbortError"?e:new FetchError(`Invalid response body while trying to fetch ${t.url}: ${e.message}`,"system",e);t[f].error=s})}}Body.prototype={get body(){return this[f].body},get bodyUsed(){return this[f].disturbed},arrayBuffer(){return consumeBody.call(this).then(function(e){return e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)})},blob(){let e=this.headers&&this.headers.get("content-type")||"";return consumeBody.call(this).then(function(t){return Object.assign(new Blob([],{type:e.toLowerCase()}),{[u]:t})})},json(){var e=this;return consumeBody.call(this).then(function(t){try{return JSON.parse(t.toString())}catch(t){return Body.Promise.reject(new FetchError(`invalid json response body at ${e.url} reason: ${t.message}`,"invalid-json"))}})},text(){return consumeBody.call(this).then(function(e){return e.toString()})},buffer(){return consumeBody.call(this)},textConverted(){var e=this;return consumeBody.call(this).then(function(t){return convertBody(t,e.headers)})}};Object.defineProperties(Body.prototype,{body:{enumerable:true},bodyUsed:{enumerable:true},arrayBuffer:{enumerable:true},blob:{enumerable:true},json:{enumerable:true},text:{enumerable:true}});Body.mixIn=function(e){for(const t of Object.getOwnPropertyNames(Body.prototype)){if(!(t in e)){const s=Object.getOwnPropertyDescriptor(Body.prototype,t);Object.defineProperty(e,t,s)}}};function consumeBody(){var e=this;if(this[f].disturbed){return Body.Promise.reject(new TypeError(`body used already for: ${this.url}`))}this[f].disturbed=true;if(this[f].error){return Body.Promise.reject(this[f].error)}let t=this.body;if(t===null){return Body.Promise.resolve(Buffer.alloc(0))}if(isBlob(t)){t=t.stream()}if(Buffer.isBuffer(t)){return Body.Promise.resolve(t)}if(!(t instanceof r)){return Body.Promise.resolve(Buffer.alloc(0))}let s=[];let n=0;let o=false;return new Body.Promise(function(r,i){let a;if(e.timeout){a=setTimeout(function(){o=true;i(new FetchError(`Response timeout while trying to fetch ${e.url} (over ${e.timeout}ms)`,"body-timeout"))},e.timeout)}t.on("error",function(t){if(t.name==="AbortError"){o=true;i(t)}else{i(new FetchError(`Invalid response body while trying to fetch ${e.url}: ${t.message}`,"system",t))}});t.on("data",function(t){if(o||t===null){return}if(e.size&&n+t.length>e.size){o=true;i(new FetchError(`content size at ${e.url} over limit: ${e.size}`,"max-size"));return}n+=t.length;s.push(t)});t.on("end",function(){if(o){return}clearTimeout(a);try{r(Buffer.concat(s,n))}catch(t){i(new FetchError(`Could not create Buffer from response body for ${e.url}: ${t.message}`,"system",t))}})})}function convertBody(e,t){if(typeof p!=="function"){throw new Error("The package `encoding` must be installed to use the textConverted() function")}const s=t.get("content-type");let r="utf-8";let n,o;if(s){n=/charset=([^;]*)/i.exec(s)}o=e.slice(0,1024).toString();if(!n&&o){n=/<meta.+?charset=(['"])(.+?)\1/i.exec(o)}if(!n&&o){n=/<meta[\s]+?http-equiv=(['"])content-type\1[\s]+?content=(['"])(.+?)\2/i.exec(o);if(!n){n=/<meta[\s]+?content=(['"])(.+?)\1[\s]+?http-equiv=(['"])content-type\3/i.exec(o);if(n){n.pop()}}if(n){n=/charset=(.*)/i.exec(n.pop())}}if(!n&&o){n=/<\?xml.+?encoding=(['"])(.+?)\1/i.exec(o)}if(n){r=n.pop();if(r==="gb2312"||r==="gbk"){r="gb18030"}}return p(e,"UTF-8",r).toString()}function isURLSearchParams(e){if(typeof e!=="object"||typeof e.append!=="function"||typeof e.delete!=="function"||typeof e.get!=="function"||typeof e.getAll!=="function"||typeof e.has!=="function"||typeof e.set!=="function"){return false}return e.constructor.name==="URLSearchParams"||Object.prototype.toString.call(e)==="[object URLSearchParams]"||typeof e.sort==="function"}function isBlob(e){return typeof e==="object"&&typeof e.arrayBuffer==="function"&&typeof e.type==="string"&&typeof e.stream==="function"&&typeof e.constructor==="function"&&typeof e.constructor.name==="string"&&/^(Blob|File)$/.test(e.constructor.name)&&/^(Blob|File)$/.test(e[Symbol.toStringTag])}function clone(e){let t,s;let n=e.body;if(e.bodyUsed){throw new Error("cannot clone body after it is used")}if(n instanceof r&&typeof n.getBoundary!=="function"){t=new d;s=new d;n.pipe(t);n.pipe(s);e[f].body=t;n=s}return n}function extractContentType(e){if(e===null){return null}else if(typeof e==="string"){return"text/plain;charset=UTF-8"}else if(isURLSearchParams(e)){return"application/x-www-form-urlencoded;charset=UTF-8"}else if(isBlob(e)){return e.type||null}else if(Buffer.isBuffer(e)){return null}else if(Object.prototype.toString.call(e)==="[object ArrayBuffer]"){return null}else if(ArrayBuffer.isView(e)){return null}else if(typeof e.getBoundary==="function"){return`multipart/form-data;boundary=${e.getBoundary()}`}else if(e instanceof r){return null}else{return"text/plain;charset=UTF-8"}}function getTotalBytes(e){const t=e.body;if(t===null){return 0}else if(isBlob(t)){return t.size}else if(Buffer.isBuffer(t)){return t.length}else if(t&&typeof t.getLengthSync==="function"){if(t._lengthRetrievers&&t._lengthRetrievers.length==0||t.hasKnownLength&&t.hasKnownLength()){return t.getLengthSync()}return null}else{return null}}function writeToStream(e,t){const s=t.body;if(s===null){e.end()}else if(isBlob(s)){s.stream().pipe(e)}else if(Buffer.isBuffer(s)){e.write(s);e.end()}else{s.pipe(e)}}Body.Promise=global.Promise;const h=/[^\^_`a-zA-Z\-0-9!#$%&'*+.|~]/;const m=/[^\t\x20-\x7e\x80-\xff]/;function validateName(e){e=`${e}`;if(h.test(e)||e===""){throw new TypeError(`${e} is not a legal HTTP header name`)}}function validateValue(e){e=`${e}`;if(m.test(e)){throw new TypeError(`${e} is not a legal HTTP header value`)}}function find(e,t){t=t.toLowerCase();for(const s in e){if(s.toLowerCase()===t){return s}}return undefined}const g=Symbol("map");class Headers{constructor(){let e=arguments.length>0&&arguments[0]!==undefined?arguments[0]:undefined;this[g]=Object.create(null);if(e instanceof Headers){const t=e.raw();const s=Object.keys(t);for(const e of s){for(const s of t[e]){this.append(e,s)}}return}if(e==null)   ;else if(typeof e==="object"){const t=e[Symbol.iterator];if(t!=null){if(typeof t!=="function"){throw new TypeError("Header pairs must be iterable")}const s=[];for(const t of e){if(typeof t!=="object"||typeof t[Symbol.iterator]!=="function"){throw new TypeError("Each header pair must be iterable")}s.push(Array.from(t))}for(const e of s){if(e.length!==2){throw new TypeError("Each header pair must be a name/value tuple")}this.append(e[0],e[1])}}else{for(const t of Object.keys(e)){const s=e[t];this.append(t,s)}}}else{throw new TypeError("Provided initializer must be an object")}}get(e){e=`${e}`;validateName(e);const t=find(this[g],e);if(t===undefined){return null}return this[g][t].join(", ")}forEach(e){let t=arguments.length>1&&arguments[1]!==undefined?arguments[1]:undefined;let s=getHeaders(this);let r=0;while(r<s.length){var n=s[r];const o=n[0],i=n[1];e.call(t,i,o,this);s=getHeaders(this);r++}}set(e,t){e=`${e}`;t=`${t}`;validateName(e);validateValue(t);const s=find(this[g],e);this[g][s!==undefined?s:e]=[t]}append(e,t){e=`${e}`;t=`${t}`;validateName(e);validateValue(t);const s=find(this[g],e);if(s!==undefined){this[g][s].push(t)}else{this[g][e]=[t]}}has(e){e=`${e}`;validateName(e);return find(this[g],e)!==undefined}delete(e){e=`${e}`;validateName(e);const t=find(this[g],e);if(t!==undefined){delete this[g][t]}}raw(){return this[g]}keys(){return createHeadersIterator(this,"key")}values(){return createHeadersIterator(this,"value")}[Symbol.iterator](){return createHeadersIterator(this,"key+value")}}Headers.prototype.entries=Headers.prototype[Symbol.iterator];Object.defineProperty(Headers.prototype,Symbol.toStringTag,{value:"Headers",writable:false,enumerable:false,configurable:true});Object.defineProperties(Headers.prototype,{get:{enumerable:true},forEach:{enumerable:true},set:{enumerable:true},append:{enumerable:true},has:{enumerable:true},delete:{enumerable:true},keys:{enumerable:true},values:{enumerable:true},entries:{enumerable:true}});function getHeaders(e){let t=arguments.length>1&&arguments[1]!==undefined?arguments[1]:"key+value";const s=Object.keys(e[g]).sort();return s.map(t==="key"?function(e){return e.toLowerCase()}:t==="value"?function(t){return e[g][t].join(", ")}:function(t){return[t.toLowerCase(),e[g][t].join(", ")]})}const _=Symbol("internal");function createHeadersIterator(e,t){const s=Object.create(w);s[_]={target:e,kind:t,index:0};return s}const w=Object.setPrototypeOf({next(){if(!this||Object.getPrototypeOf(this)!==w){throw new TypeError("Value of `this` is not a HeadersIterator")}var e=this[_];const t=e.target,s=e.kind,r=e.index;const n=getHeaders(t,s);const o=n.length;if(r>=o){return{value:undefined,done:true}}this[_].index=r+1;return{value:n[r],done:false}}},Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));Object.defineProperty(w,Symbol.toStringTag,{value:"HeadersIterator",writable:false,enumerable:false,configurable:true});function exportNodeCompatibleHeaders(e){const t=Object.assign({__proto__:null},e[g]);const s=find(e[g],"Host");if(s!==undefined){t[s]=t[s][0]}return t}function createHeadersLenient(e){const t=new Headers;for(const s of Object.keys(e)){if(h.test(s)){continue}if(Array.isArray(e[s])){for(const r of e[s]){if(m.test(r)){continue}if(t[g][s]===undefined){t[g][s]=[r]}else{t[g][s].push(r)}}}else if(!m.test(e[s])){t[g][s]=[e[s]]}}return t}const T=Symbol("Response internals");const E=n.STATUS_CODES;class Response{constructor(){let e=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;let t=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};Body.call(this,e,t);const s=t.status||200;const r=new Headers(t.headers);if(e!=null&&!r.has("Content-Type")){const t=extractContentType(e);if(t){r.append("Content-Type",t)}}this[T]={url:t.url,status:s,statusText:t.statusText||E[s],headers:r,counter:t.counter}}get url(){return this[T].url||""}get status(){return this[T].status}get ok(){return this[T].status>=200&&this[T].status<300}get redirected(){return this[T].counter>0}get statusText(){return this[T].statusText}get headers(){return this[T].headers}clone(){return new Response(clone(this),{url:this.url,status:this.status,statusText:this.statusText,headers:this.headers,ok:this.ok,redirected:this.redirected})}}Body.mixIn(Response.prototype);Object.defineProperties(Response.prototype,{url:{enumerable:true},status:{enumerable:true},ok:{enumerable:true},redirected:{enumerable:true},statusText:{enumerable:true},headers:{enumerable:true},clone:{enumerable:true}});Object.defineProperty(Response.prototype,Symbol.toStringTag,{value:"Response",writable:false,enumerable:false,configurable:true});const y=Symbol("Request internals");const b=o.parse;const O=o.format;const v="destroy"in r.Readable.prototype;function isRequest(e){return typeof e==="object"&&typeof e[y]==="object"}function isAbortSignal(e){const t=e&&typeof e==="object"&&Object.getPrototypeOf(e);return!!(t&&t.constructor.name==="AbortSignal")}class Request{constructor(e){let t=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};let s;if(!isRequest(e)){if(e&&e.href){s=b(e.href)}else{s=b(`${e}`)}e={}}else{s=b(e.url)}let r=t.method||e.method||"GET";r=r.toUpperCase();if((t.body!=null||isRequest(e)&&e.body!==null)&&(r==="GET"||r==="HEAD")){throw new TypeError("Request with GET/HEAD method cannot have body")}let n=t.body!=null?t.body:isRequest(e)&&e.body!==null?clone(e):null;Body.call(this,n,{timeout:t.timeout||e.timeout||0,size:t.size||e.size||0});const o=new Headers(t.headers||e.headers||{});if(n!=null&&!o.has("Content-Type")){const e=extractContentType(n);if(e){o.append("Content-Type",e)}}let i=isRequest(e)?e.signal:null;if("signal"in t)i=t.signal;if(i!=null&&!isAbortSignal(i)){throw new TypeError("Expected signal to be an instanceof AbortSignal")}this[y]={method:r,redirect:t.redirect||e.redirect||"follow",headers:o,parsedURL:s,signal:i};this.follow=t.follow!==undefined?t.follow:e.follow!==undefined?e.follow:20;this.compress=t.compress!==undefined?t.compress:e.compress!==undefined?e.compress:true;this.counter=t.counter||e.counter||0;this.agent=t.agent||e.agent}get method(){return this[y].method}get url(){return O(this[y].parsedURL)}get headers(){return this[y].headers}get redirect(){return this[y].redirect}get signal(){return this[y].signal}clone(){return new Request(this)}}Body.mixIn(Request.prototype);Object.defineProperty(Request.prototype,Symbol.toStringTag,{value:"Request",writable:false,enumerable:false,configurable:true});Object.defineProperties(Request.prototype,{method:{enumerable:true},url:{enumerable:true},headers:{enumerable:true},redirect:{enumerable:true},clone:{enumerable:true},signal:{enumerable:true}});function getNodeRequestOptions(e){const t=e[y].parsedURL;const s=new Headers(e[y].headers);if(!s.has("Accept")){s.set("Accept","*/*")}if(!t.protocol||!t.hostname){throw new TypeError("Only absolute URLs are supported")}if(!/^https?:$/.test(t.protocol)){throw new TypeError("Only HTTP(S) protocols are supported")}if(e.signal&&e.body instanceof r.Readable&&!v){throw new Error("Cancellation of streamed requests with AbortSignal is not supported in node < 8")}let n=null;if(e.body==null&&/^(POST|PUT)$/i.test(e.method)){n="0"}if(e.body!=null){const t=getTotalBytes(e);if(typeof t==="number"){n=String(t)}}if(n){s.set("Content-Length",n)}if(!s.has("User-Agent")){s.set("User-Agent","node-fetch/1.0 (+https://github.com/bitinn/node-fetch)")}if(e.compress&&!s.has("Accept-Encoding")){s.set("Accept-Encoding","gzip,deflate")}let o=e.agent;if(typeof o==="function"){o=o(t)}if(!s.has("Connection")&&!o){s.set("Connection","close")}return Object.assign({},t,{method:e.method,headers:exportNodeCompatibleHeaders(s),agent:o})}function AbortError(e){Error.call(this,e);this.type="aborted";this.message=e;Error.captureStackTrace(this,this.constructor)}AbortError.prototype=Object.create(Error.prototype);AbortError.prototype.constructor=AbortError;AbortError.prototype.name="AbortError";const S=r.PassThrough;const P=o.resolve;function fetch(e,t){if(!fetch.Promise){throw new Error("native promise missing, set fetch.Promise to your favorite alternative")}Body.Promise=fetch.Promise;return new fetch.Promise(function(s,o){const c=new Request(e,t);const u=getNodeRequestOptions(c);const l=(u.protocol==="https:"?i:n).request;const p=c.signal;let f=null;const d=function abort(){let e=new AbortError("The user aborted a request.");o(e);if(c.body&&c.body instanceof r.Readable){c.body.destroy(e)}if(!f||!f.body)return;f.body.emit("error",e)};if(p&&p.aborted){d();return}const h=function abortAndFinalize(){d();finalize()};const m=l(u);let g;if(p){p.addEventListener("abort",h)}function finalize(){m.abort();if(p)p.removeEventListener("abort",h);clearTimeout(g)}if(c.timeout){m.once("socket",function(e){g=setTimeout(function(){o(new FetchError(`network timeout at: ${c.url}`,"request-timeout"));finalize()},c.timeout)})}m.on("error",function(e){o(new FetchError(`request to ${c.url} failed, reason: ${e.message}`,"system",e));finalize()});m.on("response",function(e){clearTimeout(g);const t=createHeadersLenient(e.headers);if(fetch.isRedirect(e.statusCode)){const r=t.get("Location");const n=r===null?null:P(c.url,r);switch(c.redirect){case"error":o(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${c.url}`,"no-redirect"));finalize();return;case"manual":if(n!==null){try{t.set("Location",n)}catch(e){o(e)}}break;case"follow":if(n===null){break}if(c.counter>=c.follow){o(new FetchError(`maximum redirect reached at: ${c.url}`,"max-redirect"));finalize();return}const r={headers:new Headers(c.headers),follow:c.follow,counter:c.counter+1,agent:c.agent,compress:c.compress,method:c.method,body:c.body,signal:c.signal,timeout:c.timeout,size:c.size};if(e.statusCode!==303&&c.body&&getTotalBytes(c)===null){o(new FetchError("Cannot follow redirect with body being a readable stream","unsupported-redirect"));finalize();return}if(e.statusCode===303||(e.statusCode===301||e.statusCode===302)&&c.method==="POST"){r.method="GET";r.body=undefined;r.headers.delete("content-length")}s(fetch(new Request(n,r)));finalize();return}}e.once("end",function(){if(p)p.removeEventListener("abort",h)});let r=e.pipe(new S);const n={url:c.url,status:e.statusCode,statusText:e.statusMessage,headers:t,size:c.size,timeout:c.timeout,counter:c.counter};const i=t.get("Content-Encoding");if(!c.compress||c.method==="HEAD"||i===null||e.statusCode===204||e.statusCode===304){f=new Response(r,n);s(f);return}const u={flush:a.Z_SYNC_FLUSH,finishFlush:a.Z_SYNC_FLUSH};if(i=="gzip"||i=="x-gzip"){r=r.pipe(a.createGunzip(u));f=new Response(r,n);s(f);return}if(i=="deflate"||i=="x-deflate"){const t=e.pipe(new S);t.once("data",function(e){if((e[0]&15)===8){r=r.pipe(a.createInflate())}else{r=r.pipe(a.createInflateRaw())}f=new Response(r,n);s(f)});return}if(i=="br"&&typeof a.createBrotliDecompress==="function"){r=r.pipe(a.createBrotliDecompress());f=new Response(r,n);s(f);return}f=new Response(r,n);s(f)});writeToStream(m,c)})}fetch.isRedirect=function(e){return e===301||e===302||e===303||e===307||e===308};fetch.Promise=global.Promise;e.exports=t=fetch;Object.defineProperty(t,"__esModule",{value:true});t.default=t;t.Headers=Headers;t.Request=Request;t.Response=Response;t.FetchError=FetchError},223:(e,t,s)=>{var r=s(940);e.exports=r(once);e.exports.strict=r(onceStrict);once.proto=once(function(){Object.defineProperty(Function.prototype,"once",{value:function(){return once(this)},configurable:true});Object.defineProperty(Function.prototype,"onceStrict",{value:function(){return onceStrict(this)},configurable:true})});function once(e){var t=function(){if(t.called)return t.value;t.called=true;return t.value=e.apply(this,arguments)};t.called=false;return t}function onceStrict(e){var t=function(){if(t.called)throw new Error(t.onceError);t.called=true;return t.value=e.apply(this,arguments)};var s=e.name||"Function wrapped with `once`";t.onceError=s+" shouldn't be called more than once";t.called=false;return t}},294:(e,t,s)=>{e.exports=s(219)},219:(e,t,s)=>{"use strict";var r=s(631);var n=s(16);var o=s(605);var i=s(211);var a=s(614);var c=s(357);var u=s(669);t.httpOverHttp=httpOverHttp;t.httpsOverHttp=httpsOverHttp;t.httpOverHttps=httpOverHttps;t.httpsOverHttps=httpsOverHttps;function httpOverHttp(e){var t=new TunnelingAgent(e);t.request=o.request;return t}function httpsOverHttp(e){var t=new TunnelingAgent(e);t.request=o.request;t.createSocket=createSecureSocket;t.defaultPort=443;return t}function httpOverHttps(e){var t=new TunnelingAgent(e);t.request=i.request;return t}function httpsOverHttps(e){var t=new TunnelingAgent(e);t.request=i.request;t.createSocket=createSecureSocket;t.defaultPort=443;return t}function TunnelingAgent(e){var t=this;t.options=e||{};t.proxyOptions=t.options.proxy||{};t.maxSockets=t.options.maxSockets||o.Agent.defaultMaxSockets;t.requests=[];t.sockets=[];t.on("free",function onFree(e,s,r,n){var o=toOptions(s,r,n);for(var i=0,a=t.requests.length;i<a;++i){var c=t.requests[i];if(c.host===o.host&&c.port===o.port){t.requests.splice(i,1);c.request.onSocket(e);return}}e.destroy();t.removeSocket(e)})}u.inherits(TunnelingAgent,a.EventEmitter);TunnelingAgent.prototype.addRequest=function addRequest(e,t,s,r){var n=this;var o=mergeOptions({request:e},n.options,toOptions(t,s,r));if(n.sockets.length>=this.maxSockets){n.requests.push(o);return}n.createSocket(o,function(t){t.on("free",onFree);t.on("close",onCloseOrRemove);t.on("agentRemove",onCloseOrRemove);e.onSocket(t);function onFree(){n.emit("free",t,o)}function onCloseOrRemove(e){n.removeSocket(t);t.removeListener("free",onFree);t.removeListener("close",onCloseOrRemove);t.removeListener("agentRemove",onCloseOrRemove)}})};TunnelingAgent.prototype.createSocket=function createSocket(e,t){var s=this;var r={};s.sockets.push(r);var n=mergeOptions({},s.proxyOptions,{method:"CONNECT",path:e.host+":"+e.port,agent:false,headers:{host:e.host+":"+e.port}});if(e.localAddress){n.localAddress=e.localAddress}if(n.proxyAuth){n.headers=n.headers||{};n.headers["Proxy-Authorization"]="Basic "+new Buffer(n.proxyAuth).toString("base64")}l("making CONNECT request");var o=s.request(n);o.useChunkedEncodingByDefault=false;o.once("response",onResponse);o.once("upgrade",onUpgrade);o.once("connect",onConnect);o.once("error",onError);o.end();function onResponse(e){e.upgrade=true}function onUpgrade(e,t,s){process.nextTick(function(){onConnect(e,t,s)})}function onConnect(n,i,a){o.removeAllListeners();i.removeAllListeners();if(n.statusCode!==200){l("tunneling socket could not be established, statusCode=%d",n.statusCode);i.destroy();var c=new Error("tunneling socket could not be established, "+"statusCode="+n.statusCode);c.code="ECONNRESET";e.request.emit("error",c);s.removeSocket(r);return}if(a.length>0){l("got illegal response body from proxy");i.destroy();var c=new Error("got illegal response body from proxy");c.code="ECONNRESET";e.request.emit("error",c);s.removeSocket(r);return}l("tunneling connection has established");s.sockets[s.sockets.indexOf(r)]=i;return t(i)}function onError(t){o.removeAllListeners();l("tunneling socket could not be established, cause=%s\n",t.message,t.stack);var n=new Error("tunneling socket could not be established, "+"cause="+t.message);n.code="ECONNRESET";e.request.emit("error",n);s.removeSocket(r)}};TunnelingAgent.prototype.removeSocket=function removeSocket(e){var t=this.sockets.indexOf(e);if(t===-1){return}this.sockets.splice(t,1);var s=this.requests.shift();if(s){this.createSocket(s,function(e){s.request.onSocket(e)})}};function createSecureSocket(e,t){var s=this;TunnelingAgent.prototype.createSocket.call(s,e,function(r){var o=e.request.getHeader("host");var i=mergeOptions({},s.options,{socket:r,servername:o?o.replace(/:.*$/,""):e.host});var a=n.connect(0,i);s.sockets[s.sockets.indexOf(r)]=a;t(a)})}function toOptions(e,t,s){if(typeof e==="string"){return{host:e,port:t,localAddress:s}}return e}function mergeOptions(e){for(var t=1,s=arguments.length;t<s;++t){var r=arguments[t];if(typeof r==="object"){var n=Object.keys(r);for(var o=0,i=n.length;o<i;++o){var a=n[o];if(r[a]!==undefined){e[a]=r[a]}}}}return e}var l;if(process.env.NODE_DEBUG&&/\btunnel\b/.test(process.env.NODE_DEBUG)){l=function(){var e=Array.prototype.slice.call(arguments);if(typeof e[0]==="string"){e[0]="TUNNEL: "+e[0]}else{e.unshift("TUNNEL:")}console.error.apply(console,e)}}else{l=function(){}}t.debug=l},429:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});function getUserAgent(){if(typeof navigator==="object"&&"userAgent"in navigator){return navigator.userAgent}if(typeof process==="object"&&"version"in process){return`Node.js/${process.version.substr(1)} (${process.platform}; ${process.arch})`}return"<environment undetectable>"}t.getUserAgent=getUserAgent},940:e=>{e.exports=wrappy;function wrappy(e,t){if(e&&t)return wrappy(e)(t);if(typeof e!=="function")throw new TypeError("need wrapper function");Object.keys(e).forEach(function(t){wrapper[t]=e[t]});return wrapper;function wrapper(){var t=new Array(arguments.length);for(var s=0;s<t.length;s++){t[s]=arguments[s]}var r=e.apply(this,t);var n=t[t.length-1];if(typeof r==="function"&&r!==n){Object.keys(n).forEach(function(e){r[e]=n[e]})}return r}}},877:module=>{module.exports=eval("require")("encoding")},357:e=>{"use strict";e.exports=require("assert")},614:e=>{"use strict";e.exports=require("events")},747:e=>{"use strict";e.exports=require("fs")},605:e=>{"use strict";e.exports=require("http")},211:e=>{"use strict";e.exports=require("https")},631:e=>{"use strict";e.exports=require("net")},87:e=>{"use strict";e.exports=require("os")},622:e=>{"use strict";e.exports=require("path")},413:e=>{"use strict";e.exports=require("stream")},16:e=>{"use strict";e.exports=require("tls")},835:e=>{"use strict";e.exports=require("url")},669:e=>{"use strict";e.exports=require("util")},761:e=>{"use strict";e.exports=require("zlib")}};var __webpack_module_cache__={};function __webpack_require__(e){if(__webpack_module_cache__[e]){return __webpack_module_cache__[e].exports}var t=__webpack_module_cache__[e]={exports:{}};var s=true;try{__webpack_modules__[e].call(t.exports,t,t.exports,__webpack_require__);s=false}finally{if(s)delete __webpack_module_cache__[e]}return t.exports}__webpack_require__.ab=__dirname+"/";return __webpack_require__(932)})();